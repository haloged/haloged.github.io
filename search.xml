<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTML教程</title>
    <url>/posts/d9c0a3d4.html</url>
    <content><![CDATA[<h1 id="HTML-教程-HTML5-标准"><a href="#HTML-教程-HTML5-标准" class="headerlink" title="HTML 教程- (HTML5 标准)"></a>HTML 教程- (HTML5 标准)</h1><p>超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。<br />您可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。<br />在本教程中，您将学习如何使用 HTML 来创建站点。<br />HTML 很容易学习！相信您能很快学会它！</p>
<p><img src="https://s3.uuu.ovh/imgs/2023/06/17/05ed9f489deb8a7d.png" alt="https://s3.uuu.ovh/imgs/2023/06/17/05ed9f489deb8a7d.png"></p>
<h2 id="HTML-实例"><a href="#HTML-实例" class="headerlink" title="HTML 实例"></a>HTML 实例</h2><p>本教程包含了数百个 HTML 实例。<br />使用本站的编辑器，您可以轻松实现在线修改 HTML，并查看实例运行结果。<br><strong><em>注意：</em></strong><em>对于中文网页需要使用 </em><strong><em><meta charset="utf-8"></em></strong><em> 声明编码，否则会出现乱码。有些浏览器(如 360 浏览器)会设置 GBK 为默认编码，则你需要设置为 </em><strong><em><meta charset="gbk">。</em></strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="HTML文档的后缀名"><a href="#HTML文档的后缀名" class="headerlink" title="HTML文档的后缀名"></a>HTML文档的后缀名</h2><ul>
<li><strong>.html</strong></li>
<li><strong>.htm</strong></li>
</ul>
<p>以上两种后缀名没有区别，都可以使用。</p>
<hr>
<h2 id="HTML-实例-1"><a href="#HTML-实例-1" class="headerlink" title="HTML 实例"></a>HTML 实例</h2><p>在 HTML 手册中包含了数百个在线实例，您可以在线编辑并查看运行结果。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>保姆级Hexo教程3-主题配置</title>
    <url>/posts/78e8aec1.html</url>
    <content><![CDATA[<p>好久没有更新文章了，今天来填一下坑</p>
<h1 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h1><p>修改站点配置文件 <code>_config.yml</code>(注意不是_config.butterfly.yml啊！！！)</p>
<p>默认语言是 en</p>
<p>Butterfly主题支持三种语言：</p>
<ul>
<li>default(en)</li>
<li>zh-CN (简体中文)</li>
<li>zh-TW (繁体中文)</li>
</ul>
<p>只要把想要的语言填到 <code>language</code>里就可以了。</p>
<p><img src="https://s3.uuu.ovh/imgs/2023/06/18/b0070f523b7a289e.png" alt=""></p>
<h1 id="导航栏设置"><a href="#导航栏设置" class="headerlink" title="导航栏设置"></a>导航栏设置</h1><p>注意！！！后面的就是在 <code>_config.butterfly.yml</code>力！！！</p>
<h2 id="参数设置"><a href="#参数设置" class="headerlink" title="参数设置"></a>参数设置</h2><p>主题配置中</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="comment">#image</span></span><br><span class="line">  <span class="attr">display_title:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">false</span> <span class="comment"># fixed navigation bar</span></span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>logo</td>
<td>网站的 logo，支持图片，直接填入图片链接</td>
</tr>
<tr>
<td>display_title</td>
<td>是否显示网站标题，填写 true 或者 false</td>
</tr>
<tr>
<td>fixed</td>
<td>是否固定状态栏，填写 true 或者 false</td>
</tr>
</tbody>
</table>
</div>
<p>后面的就可以自己去探索了！</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>ATM机2.0</title>
    <url>/posts/7.7457e+65.html</url>
    <content><![CDATA[<p>ATM机2.0，由haloged制作。</p>
<p>编程猫源文件：<a href="https://haloged.github.io/haloged1/ATM%E6%9C%BA2.0.bcm4">点击此处</a><br />ATM机exe文件：<a href="https://pan.baidu.com/s/1xjNMjFN2u5P4EQhi2vzabg?pwd=ATM2">点击此处</a><br />在线体验链接：<a href="https://shequ.codemao.cn/work/157529781">点击此处</a></p>
<h2 id="部分登录积木图片："><a href="#部分登录积木图片：" class="headerlink" title="部分登录积木图片："></a>部分登录积木图片：</h2><p><img src="https://s3.uuu.ovh/imgs/2023/06/01/23fffcd75dcb98d6.png" alt="1976a92ca0314fd8944ef970e239fa59.png"></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Codemao</tag>
      </tags>
  </entry>
  <entry>
    <title>python学生管理系统(pyqt5 含界面)</title>
    <url>/posts/6c03698e.html</url>
    <content><![CDATA[<h1 id="学生管理系统项目流程"><a href="#学生管理系统项目流程" class="headerlink" title="学生管理系统项目流程"></a>学生管理系统项目流程</h1><h2 id="项目模块"><a href="#项目模块" class="headerlink" title="项目模块"></a>项目模块</h2><h3 id="账号登陆"><a href="#账号登陆" class="headerlink" title="账号登陆"></a>账号登陆</h3><h3 id="人脸识别"><a href="#人脸识别" class="headerlink" title="人脸识别"></a>人脸识别</h3><h3 id="增添学生信息"><a href="#增添学生信息" class="headerlink" title="增添学生信息"></a>增添学生信息</h3><h3 id="删除学生信息"><a href="#删除学生信息" class="headerlink" title="删除学生信息"></a>删除学生信息</h3><h3 id="改动学生信息"><a href="#改动学生信息" class="headerlink" title="改动学生信息"></a>改动学生信息</h3><h3 id="查询学生信息"><a href="#查询学生信息" class="headerlink" title="查询学生信息"></a>查询学生信息</h3><h1 id="项目主体框架"><a href="#项目主体框架" class="headerlink" title="项目主体框架"></a>项目主体框架</h1><p><img src="https://i.ibb.co/7V33pc5/5d06ad7162d586a7.png" alt="https://i.ibb.co/7V33pc5/5d06ad7162d586a7.png"></p>
<ul>
<li>app.py为主代码，负责用于界面打开展示。</li>
<li>img文件夹负责放置项目qrc的图像</li>
<li>page文件夹为单独页面的类</li>
<li>plugin文件夹为功能模块的类</li>
<li>ui文件夹为存放页面的ui文件和pyuic5导出的py文件</li>
</ul>
<h1 id="项目设计知识："><a href="#项目设计知识：" class="headerlink" title="项目设计知识："></a>项目设计知识：</h1><ol>
<li>PyQt5</li>
<li>Mysql</li>
<li>线程与进程</li>
<li>docker</li>
</ol>
<h1 id="Mysql数据库的搭建-docker快速部署方案"><a href="#Mysql数据库的搭建-docker快速部署方案" class="headerlink" title="Mysql数据库的搭建(docker快速部署方案)"></a>Mysql数据库的搭建(docker快速部署方案)</h1><p><a href="https://so.csdn.net/so/search?q=%E5%AE%89%E8%A3%85docker&amp;spm=1001.2101.3001.7020">安装docker</a></p>
<p>1、使用daocloud脚本安装docker。</p>
<p>curl -sSL <a href="https://get.daocloud.io/docker">https://get.daocloud.io/docker</a> | sh<br>2、检查安装状态</p>
<p>sudo service docker status(q退出)<br>或者<code>docker -v</code></p>
<h2 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h2><p>1、拉取mysql。</p>
<p>docker pull mysql<br>2、创建一个目录存放mysql数据文件。</p>
<p>mkdir mysql<br>3、 <a href="https://so.csdn.net/so/search?q=%E8%BF%9B%E5%85%A5mysql&amp;spm=1001.2101.3001.7020">进入mysql</a>目录。</p>
<p>cd mysql<br>4、启动mysql。(scc110186为密码，自己设置，开放安全组3306端口)</p>
<p>docker run —name mysqlserver -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=scc110186 -d -i -p 3306:3306 mysql:latest<br>5、查看mysql在容器的名称。</p>
<p>docker ps -a<br>6、进入docker mysql容器。</p>
<p>docker exec -it mysqlserver bash<br>7、连接mysql。</p>
<p>mysql -uroot -pscc110186<br>8、执行命令。</p>
<p>ALTER USER ‘root’@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘password’;<br>ALTER USER ‘root’@’%’ IDENTIFIED WITH mysql_native_password BY ‘scc110186’;<br>9、打开SQLyog等数据库连接软件，输入主机地址，用户名，密码，进行连接，即可连接成功。</p>
<h1 id="项目功能插件部分"><a href="#项目功能插件部分" class="headerlink" title="项目功能插件部分"></a>项目功能插件部分</h1><h2 id="Mysql数据库操作部分"><a href="#Mysql数据库操作部分" class="headerlink" title="Mysql数据库操作部分"></a>Mysql数据库操作部分</h2><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>首先，因为我们的代码中，经常出现增删查改的部分，那么我们可以认为这个部分就是高频调用部分，那么一般我们再写项目的时候，我们可以将高频调用的部分，直接放入我们的函数中，再用一个类对这些函数统一进行封装，来封装出类的方法。<br>那么首先我们的类的初始化部分，一定要对数据库进行连接，然后创建游标。用self来修饰变量，使他们可以在整个类中被访问到。<br>下面的代码涉及到数据库参数的部分，被我清除了，请大家自行写入。</p>
<p>class db<em>handle:<br>def <em>_init</em></em>(self):</p>
<h1 id="初始化自动连接Mysql数据库"><a href="#初始化自动连接Mysql数据库" class="headerlink" title="初始化自动连接Mysql数据库"></a>初始化自动连接Mysql数据库</h1><p>self.db = pymysql.connect(host=””,<br>user=””,<br>password=””,<br>database=””)<br>self.cur = self.db.cursor()<br>上面的代码中self.db和self.cur为整个db_handle类中公用的部分。所以我们可以在类的方法中进行调用、访问。</p>
<h3 id="账号密码登陆验证"><a href="#账号密码登陆验证" class="headerlink" title="账号密码登陆验证"></a>账号密码登陆验证</h3><p>其次就是账号密码登录部分，我们可以封装一个方法，接受两个形参，一个是账号，一个是密码。因为账号为数据库的主键，所以账号是唯一的，所以我们可以通过搜索账号，获取数据库中存储的密码，来进行验证。代码如下：</p>
<p>def login_check(self, id, pwd):<br>“””<br>登录时账号密码的检查函数<br>Author:SCC<br>:param id: 账号<br>:param pwd: 密码<br>:return: True / False<br>“””<br>sql_message = “SELECT pwd FROM login_db WHERE id=’{}’”.format(id)  # 因为 id 为主键<br>self.cur.execute(sql_message)<br>data = self.cur.fetchall()<br>logger.debug(data)<br>right_pwd = data[0][0]<br>if pwd == right_pwd:<br>return True<br>else:<br>return False<br>那么我们可以看到一个搜索数据库的一个方法。<code>SELECT ？ FROM ？ WHERE ？</code>。搜索到的结果一般是以元组来装载的，在元组中又是一个又一个小的元组。我们可以通过下标进行访问。用for或while进行遍历输出。函数的返回值为True或者False。这样我们的界面在调用函数时，就可以清楚的知道账号密码是否正确。同时可以通过if判断来对函数返回值的True和False做判断，实现登陆界面是否跳转主界面的逻辑。</p>
<h3 id="搜索表内所有学生数据"><a href="#搜索表内所有学生数据" class="headerlink" title="搜索表内所有学生数据"></a>搜索表内所有学生数据</h3><p>在界面打开后我们需要搜索所有学生的信息，并显示在tableWidget控件上。那么我们可以继续使用搜索语句，搜索数据库中所有的学生信息。</p>
<p>def info_init(self):<br>sql_message = “SELECT * FROM student_info”  # 搜索所有学生信息数据<br>self.cur.execute(sql_message)  # 执行语句<br>datas = self.cur.fetchall()  # 获取所有信息结果<br>logger.debug(datas)<br>data_list = [data for data in datas]<br>return data_list<br>上面就是对所有学生信息进行查询的方法，在查询之后，将每一组学生数据通过列表进行存储。上述存储方式使用的为列表推导式。如果为初学阶段，可以改为如下代码。</p>
<p>for data in datas:<br>data_list.append(data)<br>上面为简易版本，但是速度上存在差异，不适用于高数据IO时进行使用。如果可以的话，甚至可以封装一个queue队列，进行先入先出显示。存储在线程中。会让程序更加高效。</p>
<h3 id="删除学生信息-1"><a href="#删除学生信息-1" class="headerlink" title="删除学生信息"></a>删除学生信息</h3><p>现在就是我们进入增删改查部分的编写了，我们要先对学生的信息删除进行编写。代码如下：</p>
<p>def remove(self, name, id, class_text, phone, addr):<br>sql_message = “DELETE FROM student_info WHERE name=’{}’”<br>“ and id=’{}’”<br>“ and class=’{}’”<br>“ and phone=’{}’”<br>“ and addr=’{}’”.format(name, id, class_text, phone, addr)<br>self.cur.execute(sql_message)<br>self.db.commit()<br>上述代码中包含了删除的书写方式，同时可以将删除部分写在一行中，但是因为Python书写规范中明确表明：一行字符最多不能超过120个，所以使用这种方式更加规范，易读。</p>
<h3 id="增加、更改、查询学生信息"><a href="#增加、更改、查询学生信息" class="headerlink" title="增加、更改、查询学生信息"></a>增加、更改、查询学生信息</h3><p>剩下的代码就是增删改查中增、改、查部分了。主题思路与删除一致。不过多赘述。</p>
<p>def search(self, name):<br>sql_message = “SELECT * FROM student_info WHERE name=’{}’”.format(name)<br>self.cur.execute(sql_message)<br>datas = self.cur.fetchall()<br>data_list = [data for data in datas]<br>return data_list</p>
<p>def insert(self, name, id, class_text, phone, addr):<br>sql_message = “INSERT INTO student_info(name, id, class, phone, addr)”<br>“ values(‘{}’, ‘{}’, ‘{}’, ‘{}’, ‘{}’)”.format(name, id, class_text, phone, addr)<br>self.cur.execute(sql_message)<br>self.db.commit()</p>
<p>def change(self, name, id, class_text, phone, addr, oname, oid, oclass_text, ophone, oaddr):<br>sql_message = “UPDATE student_info set name=’{}’,id=’{}’,class=’{}’,phone = ‘{}’,addr=’{}’”<br>“where name = ‘{}’ and id=’{}’ and class=’{}’ and phone = ‘{}’ and addr=’{}’”.format(<br>name, id, class_text, phone, addr, oname, oid, oclass_text, ophone, oaddr<br>)<br>self.cur.execute(sql_message)<br>self.db.commit()</p>
<h2 id="UI界面设计"><a href="#UI界面设计" class="headerlink" title="UI界面设计"></a>UI界面设计</h2><p>因为初版为Demo版本所以界面，没有过多美化。大家可以自行添加QSS进行修改。先给大家放一下我们两个界面的设计图。<br><img src="https://s3.uuu.ovh/imgs/2023/05/28/b517b803a2e9e771.png" alt="7d1e7a7d3b9149feacac4d9040352647.png"></p>
<p>上面这个就是用控件图绘制的界面。</p>
<h3 id="登陆界面"><a href="#登陆界面" class="headerlink" title="登陆界面"></a>登陆界面</h3><p>下面我们来讲一下登陆界面的逻辑，首先登录界面有账号密码登录，人脸识别登录。因为人脸识别涉及到了一些dll动态链接库和一些不同操作系统下的检测，并且算法属于实验室二次开发出来的，就不在这里进行展示。只展示账号密码部分的逻辑。<br>账号密码的逻辑就是将我们两个输入框的文本进行获取，在获取之后，进行一个数据库的比对，正确时进行界面跳转，错误是弹窗警报。</p>
<h4 id="退出与最小化"><a href="#退出与最小化" class="headerlink" title="退出与最小化"></a>退出与最小化</h4><p>我们的界面需要退出或者最小化，而这个又是最好实现的功能。那么我们就看一下这个应该如何去写。</p>
<p>self.close_btn.clicked.connect(lambda: sys.exit())<br>self.mini_btn.clicked.connect(lambda: self.showMinimized())<br>我们直接定义两个按钮的信号与槽，然后绑定一个匿名函数，一个用于关闭系统，另一个用于最小化界面。匿名函数看不懂的话，可以写成如下效果。</p>
<p>self.close_btn.clicked.connect(self.close_ui)<br>self.mini_btn.clicked.connect(self.minisize_ui)</p>
<p>def close_ui(self):<br>self.close()</p>
<p>def minisize_ui(self):<br>self.showMinimized()</p>
<h4 id="数据库匹配登录"><a href="#数据库匹配登录" class="headerlink" title="数据库匹配登录"></a>数据库匹配登录</h4><p>我们可以像如下代码一样编写一个登录验证的函数，并且绑定信号与槽，这里我就不写绑定部分了，可以从上一部分学习一下。</p>
<p>def login(self):<br>“””<br>进行登陆的函数<br>Author:SCC<br>:return: None<br>“””<br>try:<br>id_text = self.id_edit.text()<br>pwd_text = self.pwd_edit.text()<br>except BaseException as e:<br>QMessageBox.about(self, ‘Error’, ‘请正确输入账号或密码!’)<br>return<br>if id_text.replace(“ “, “”) == “” or pwd_text.replace(“ “, “”) == “”:<br>QMessageBox.about(self, ‘Error’, ‘请正确输入账号或密码!’)<br>else:<br>logger.debug(id_text)<br>logger.debug(pwd_text)<br>if self.db_handle.login_check(id_text, pwd_text):<br>logger.debug(“ok”)<br>self.cap.release()<br>self.info_ui = info_ui()<br>self.info_ui.show()<br>self.close()<br>else:<br>QMessageBox.about(self, ‘Error’, ‘账号或密码错误!’)<br>在这里我们为了防止出现Bug，接入了一个try except。因为无论何时，我们都不能保证用户是一个正常的思维使用我们的项目，他可能不输入，也可能乱输入。所以要进行报错处理。在获取输入之后，我们将数据放入Mysql中进行匹配查找。当查找函数返回为True，代表查找结果成功，存在对应的数据。相对应的登陆成功，出现登录成功的弹窗。但是若返回参数为False，那么代表数据库中未找到匹配的人员信息，那么登录失败，出现帐号或密码错误的弹窗。</p>
<h4 id="界面跳转"><a href="#界面跳转" class="headerlink" title="界面跳转"></a>界面跳转</h4><p>界面跳转讲几个步骤。</p>
<ol>
<li>首先实例化第一个类</li>
<li>其次显示这个界面</li>
<li><p>最后关闭当前界面</p>
<p>self.info_ui = info_ui()  # 实例化新的界面类<br>self.info_ui.show()  # 显示新界面<br>self.close()  # 关闭当前界面</p>
</li>
</ol>
<h3 id="信息管理界面"><a href="#信息管理界面" class="headerlink" title="信息管理界面"></a>信息管理界面</h3><h4 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h4><p>我们在界面跳转后，进入我们的增删改查界面，首先我们要将学生的信息自动显示在tableWidget中，那么对于大量的数据IO，我们不能将查找的算法直接写在进程中，因为这样在大量数据出现时，容易导致进程阻塞，最后界面进入假死状态。所以我们要写到对应的线程中。<br>线程是一个在后期经常使用的写法，因为一个程序中多个功能同步或异步进行的情况非常多，如果将所有代码放在一个进程中，一定会出现一些卡顿，甚至是异常状态。那么这个时候我们一般将线程放置到我们的代码中，来解决这样的问题。代码如下：</p>
<p>class db<em>init(QThread):<br>def <strong>init</strong>(self, info<em>ui):<br>super(db_init, self).__init</em></em>()<br>self.info_ui = info_ui<br>self.data_list = None<br>self.db_handle = db_handle()</p>
<p>def run(self):<br>self.info_ui.tableWidget.clearContents()<br>self.data_list = self.db_handle.info_init()<br>logger.debug(self.data_list)<br>self.info_ui.tableWidget.setRowCount(len(self.data_list))<br>for i in range(len(self.data_list)):<br>for y in range(5):<br>nameitem = QTableWidgetItem(QtWidgets.QTableWidgetItem(self.data_list[i][y]))<br>nameitem.setTextAlignment(Qt.AlignCenter)  # 中对齐<br>self.info_ui.tableWidget.setItem(i, y, nameitem)<br>我们的线程会将数据放入到tablewidget中，进行显示。<br>那么我们来看一下代码，首先我们声明一个类，名为db_init，他绑定了一个QThread，并继承于info_ui界面。那么这个线程在初始化时，只是将我们提前准备的数据库操作的类进行了初始化。而他的run方法中，是一个完整的搜索数据库并显示在界面中的算法。这样我们的线程就创建好了。我们只需要在需要他的时候，进行实例化，并且将它开启。当线程执行结束后，将自动停止，但是也可以手动调用stop方法，停止线程。</p>
<h4 id="主界面逻辑"><a href="#主界面逻辑" class="headerlink" title="主界面逻辑"></a>主界面逻辑</h4><p>接下来，我们要写的是主界面的一些逻辑，我们要绑定所有按钮的信号与槽，让他们在被点击后可以有自己的处理事件。首先是增加学生。也就是数据库的增添函数。</p>
<p>def add_stu(self):<br>add_name = self.info_name.text()<br>add_id = self.info_id.text()<br>add_class = self.info_class.text()<br>add_phone = self.info_phone.text()<br>add_addr = self.info_addr.text()<br>try:<br>if add_name == “” or add_id == “” or add_class == “” or add_phone == “” or add_addr == “”:<br>QMessageBox.about(self, ‘Error’, ‘请将数据输入完整!’)<br>else:<br>self.db_handle.insert(add_name, add_id, add_class, add_phone, add_addr)<br>self.tableWidget.clearContents()<br>self.data_list = self.db_handle.info_init()<br>self.tableWidget.setRowCount(len(self.data_list))<br>for i in range(len(self.data_list)):<br>for y in range(5):<br>nameitem = QTableWidgetItem(QtWidgets.QTableWidgetItem(self.data_list[i][y]))<br>nameitem.setTextAlignment(Qt.AlignCenter)  # 中对齐<br>self.tableWidget.setItem(i, y, nameitem)<br>except:<br>QMessageBox.about(self, ‘Error’, ‘数据重复!’)<br>我们要获取学生的姓名班级学号这些输入框，同时大家可以加上一些判断，例如是否输入的是数字，学号是否符合规则等。这样会让程序更加的稳定。我们将几个数据传入数据库中，进行添加，然后加一个刷新数据库和界面的功能，让我们的程序显得更加智能化。<br>这里我们依然是调用的我们写好的数据库操作类进行的添加。所以我们可以看出，这些函数是非常常用的函数，所以在封装之后，我们可以很轻松的调用他们。<br>当数据出现重复时，我们可以直接进行弹窗提醒。那么如何监测的重复，我们可以理解为学生的姓名也许可以重复，学生的地址可以重复，但是学号和电话号不会重复，那么在Mysql中我们可以将这两列作为我们区分的条件。<br>其次就是删除学生，首先我们要获取我们的tablewidget点击事件。在触发点击事件后我们可以获取点击事件的行和列。那么根据行和列的参数，就可以获取到我们想删除的学生信息。</p>
<p>def salegoodsselect(self, row):<br>self.name = self.tableWidget.item(row, 0).text()<br>self.id = self.tableWidget.item(row, 1).text()<br>self.class_text = self.tableWidget.item(row, 2).text()<br>self.phone = self.tableWidget.item(row, 3).text()<br>self.addr = self.tableWidget.item(row, 4).text()<br>在获取到数据后，我们将当前学生的各个信息存储至变量中，随后我们就可以执行删除函数。同时我们将参数进行传入，让数据库操作删除指定的一行数据。<br>但是，同时我们要注意一些小的细节。如果我不进行点击，我就单独进行删除，那么现在我们的存储信息的变量的值就是None。那么如果将None传入Mysql，肯定会导致报错。所以在执行前我们要进行一个判断，在发现结果为None是，我们就显示一个请选择删除人员的弹窗。</p>
<p>def remove_stu(self):<br>if self.name is None or self.id is None or self.class_text is None or self.phone is None or self.addr is None:<br>QMessageBox.about(self, ‘Error’, ‘请先选择删除人员!’)<br>return<br>else:<br>self.db_handle.remove(self.name, self.id, self.class_text, self.phone, self.addr)<br>self.tableWidget.clearContents()<br>self.data_list = self.db_handle.info_init()<br>self.tableWidget.setRowCount(len(self.data_list))<br>for i in range(len(self.data_list)):<br>for y in range(5):<br>nameitem = QTableWidgetItem(QtWidgets.QTableWidgetItem(self.data_list[i][y]))<br>nameitem.setTextAlignment(Qt.AlignCenter)  # 中对齐<br>self.tableWidget.setItem(i, y, nameitem)<br>删除后，同样自动进行更新函数。<br>然后是改动的函数，这个函数同样需要依赖获取我们点击tablewidget的事件，同时获取我们的输入框信息，将信息存储至变量中，进行判断，确保已经获取到点击人员的信息。同时我们判断一下输入框中是否有数据。同时可以加上一些输入信息是否合理的判断。在判断全都通过后，进行数据的上传，同时要确定数据没有重复的情况。</p>
<p>def change_stu(self):<br>add_name = self.info_name.text()<br>add_id = self.info_id.text()<br>add_class = self.info_class.text()<br>add_phone = self.info_phone.text()<br>add_addr = self.info_addr.text()<br>if self.name is None or self.id is None or self.class_text is None or self.phone is None or self.addr is None:<br>QMessageBox.about(self, ‘Error’, ‘请先选择修改人员!’)<br>return<br>try:<br>if add_name == “” or add_id == “” or add_class == “” or add_phone == “” or add_addr == “”:<br>QMessageBox.about(self, ‘Error’, ‘请将数据输入完整!’)<br>else:<br>self.db_handle.change(add_name, add_id, add_class, add_phone, add_addr, self.name, self.id, self.class_text, self.phone, self.addr)<br>self.tableWidget.clearContents()<br>self.data_list = self.db_handle.info_init()<br>self.tableWidget.setRowCount(len(self.data_list))<br>for i in range(len(self.data_list)):<br>for y in range(5):<br>nameitem = QTableWidgetItem(QtWidgets.QTableWidgetItem(self.data_list[i][y]))<br>nameitem.setTextAlignment(Qt.AlignCenter)  # 中对齐<br>self.tableWidget.setItem(i, y, nameitem)<br>except BaseException as e:<br>logger.debug(e)<br>QMessageBox.about(self, ‘Error’, ‘数据重复!’)<br>最后是查询函数，我们需要先获取输入框中的文本，确定我们要找到的学生姓名，然后传输到数据库中进行查找，获取他在数据库中的数据，最后将数据进行整合，显示在tablewidget中。</p>
<p>def search_stu(self):<br>if self.name_edit.text() != “”:<br>data_list = self.db_handle.search(self.name_edit.text())<br>self.tableWidget.clearContents()<br>self.tableWidget.setRowCount(len(data_list))<br>for i in range(len(data_list)):<br>for y in range(5):<br>nameitem = QTableWidgetItem(QtWidgets.QTableWidgetItem(data_list[i][y]))<br>nameitem.setTextAlignment(Qt.AlignCenter)  # 中对齐<br>self.tableWidget.setItem(i, y, nameitem)<br>else:<br>self.tableWidget.clearContents()<br>self.data_list = self.db_handle.info_init()<br>self.tableWidget.setRowCount(len(self.data_list))<br>for i in range(len(self.data_list)):<br>for y in range(5):<br>nameitem = QTableWidgetItem(QtWidgets.QTableWidgetItem(self.data_list[i][y]))<br>nameitem.setTextAlignment(Qt.AlignCenter)  # 中对齐<br>self.tableWidget.setItem(i, y, nameitem)</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>体验ChatGPT</title>
    <url>/posts/72a7a47.html</url>
    <content><![CDATA[<p>在B站上，有很多体验ChatGPT的视频，还有很多QQ群友也在群里展示他们调戏ChatGPT的图片。我也很想体验这个。但是万万没想到，折腾了这么久，最后还是用一个最简单的办法实现的。所以我就想写个文档纪念一下。</p>
<h2 id="1-直接到OpenAI官网注册账号"><a href="#1-直接到OpenAI官网注册账号" class="headerlink" title="1.直接到OpenAI官网注册账号"></a>1.直接到OpenAI官网注册账号</h2><p>首先，我直接想到了去OpenAI官网注册一个账号，就可以玩ChatGPT了。<br />但是，要是真的这么简单我就不会写文章了。<br />首先打开OpenAI官网<br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/7144bcaca1dd9423.png" alt="c2881d4fd8234822bf3a9a4c840b9cc3.png"><br />然后往下滑在<strong>FEATURED一栏里找到ChatGPT</strong><br /><strong>由于我没有梯子，所以OpenAI直接提示</strong>Access denied不让进。<br />所以，这个方案pass。<img src="https://s3.uuu.ovh/imgs/2023/05/27/d837f5dd13b170d1.png" alt="b4d25f5c360e4ee1ae63c1a535de557d.png"></p>
<h2 id="2-Github开源QQChannelChatGPT项目"><a href="#2-Github开源QQChannelChatGPT项目" class="headerlink" title="2.Github开源QQChannelChatGPT项目"></a>2.Github开源QQChannelChatGPT项目</h2><p>由于第一项ChatGPT碰壁，我好几天都没有再研究这个玩意。<br />直到有一天，我在全球最大的同性交友平台Github上发现了QQChannelChatGPT这个项目。<br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/82da45d2dd0b19e5.png" alt="QQ截图20230107171452.png"><br />这个东西简单来说就是通过QQ开放平台创建一个频道机器人，然后在通过python实现到OpenAI服务器的通讯。<br />但是，这玩意的README里面说如需使用这个东西需要注册OpenAI账号获取key。<br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/41685e2792348280.png" alt="QQ截图20230107171855.png"><br />所以，这个又进入了第一个方法的死循环，pass。</p>
<h2 id="3-使用现成QQ频道机器人"><a href="#3-使用现成QQ频道机器人" class="headerlink" title="3.使用现成QQ频道机器人"></a>3.使用现成QQ频道机器人</h2><p>上面的项目中有一个频道的二维码，由于我不想加入并且不想在别人的频道里玩，所以这件事就不了了之。<br />但是，几天后，我在QQ开发者社区中发现了另一款机器人。我立刻把那一款机器人添加到了我的频道中。可是没过几个小时，机器人突然提示OpenAI API错误:( 原因如下：You exceeded your current quota, please check your plan and billing details. <br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/451a3a3255724cd4.png" alt="QQ截图20230107173959.png"><br />于是我赶紧使用<code>/status</code>查看设置。<br />结果，二十一个服务器全挂了。<br />但是呢，几个小时之后，服务器又恢复了。<br />虽然这个方法不稳定，但是起码还能用，所以体验成功！</p>
<h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结"></a>4.总结</h2><p>这年头，折腾外网的东西没有个梯子是真的不好弄了。<br />有条件的小伙伴可以自己搭建一个机器人。<br />QQChannelChatGPT开源地址：<a href="https://github.com/Soulter/QQChannelChatGPT">https://github.com/Soulter/QQChannelChatGPT</a><br />OpenAI官网：<a href="https://openai.com/">https://openai.com/</a><br />QQ开发者社区频道号：20dnumts4z2<br />有兴趣的小伙伴可以去看看。</p>
]]></content>
      <tags>
        <tag>体验</tag>
        <tag>ChatGPT</tag>
      </tags>
  </entry>
  <entry>
    <title>CoCo安全卫士</title>
    <url>/posts/6161a01b.html</url>
    <content><![CDATA[<p>一个鸽了很久的作品，其实实际上没卵用。<br /><img src="https://s1.vika.cn/space/2023/01/23/9ac14bca197048b0b54c3992739e1297" alt="QQ截图20230114165335.png"><br />在线体验链接：<a href="https://coco.codemao.cn/editor/player/158330969?channel=h5">https://coco.codemao.cn/editor/player/158330969?channel=h5</a><br />下载链接：<a href="https://creation.codemao.cn/434/1E0C5832BD8E4FE2ABEFD310E871CBF9/CoCo安全卫士.apk">https://creation.codemao.cn/434/1E0C5832BD8E4FE2ABEFD310E871CBF9/CoCo安全卫士.apk</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Codemao</tag>
      </tags>
  </entry>
  <entry>
    <title>(已修复)编程猫社区防&quot;喵&quot;工具</title>
    <url>/posts/46dfedfb.html</url>
    <content><![CDATA[<p>放“喵”工具，由haloged制作。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkinter.scrolledtext <span class="keyword">import</span> ScrolledText</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Shielding</span>(<span class="params">content</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&#x27;\xe2\x80\xaa&#x27;</span>.decode(</span><br><span class="line">        <span class="string">&#x27;UTF-8&#x27;</span>).join([i <span class="keyword">for</span> i <span class="keyword">in</span> content])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_write</span>():</span><br><span class="line">    st2[<span class="string">&#x27;state&#x27;</span>] = NORMAL</span><br><span class="line">    st2.delete(<span class="number">0.0</span>, <span class="string">&quot;end&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(st.get(<span class="string">&#x27;0.0&#x27;</span>, <span class="string">&#x27;end&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(Shielding(st.get(<span class="string">&#x27;0.0&#x27;</span>, <span class="string">&#x27;end&#x27;</span>)))</span><br><span class="line">    st2.insert(<span class="number">0.0</span>, Shielding(st.get(<span class="string">&#x27;0.0&#x27;</span>, <span class="string">&#x27;end&#x27;</span>)))</span><br><span class="line">    st2[<span class="string">&#x27;state&#x27;</span>] = DISABLED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">copy</span>():</span><br><span class="line">    st2[<span class="string">&#x27;state&#x27;</span>] = NORMAL</span><br><span class="line">    st2.event_generate(<span class="string">&#x27;&lt;&lt;Copy&gt;&gt;&#x27;</span>)</span><br><span class="line">    st2[<span class="string">&#x27;state&#x27;</span>] = DISABLED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    win = Tk()</span><br><span class="line">    win.title(<span class="string">&#x27;防喵工具&#x27;</span>)</span><br><span class="line">    win.resizable(width=<span class="literal">False</span>, height=<span class="literal">False</span>)</span><br><span class="line">    win.wm_attributes(<span class="string">&#x27;-topmost&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">    Label(win, text=<span class="string">&#x27;内</span></span><br><span class="line"><span class="string">容&#x27;</span>, font=(<span class="number">10</span>)).grid(row=<span class="number">0</span>, column=<span class="number">0</span>, rowspan=<span class="number">3</span>)</span><br><span class="line">    st = ScrolledText(win, height=<span class="number">10</span>, width=<span class="number">20</span>)</span><br><span class="line">    st.grid(row=<span class="number">0</span>, column=<span class="number">1</span>, columnspan=<span class="number">3</span>, rowspan=<span class="number">3</span>)</span><br><span class="line">    Label(win, text=<span class="string">&#x27;转</span></span><br><span class="line"><span class="string">换&#x27;</span>, font=(<span class="number">10</span>)).grid(row=<span class="number">4</span>, column=<span class="number">0</span>, rowspan=<span class="number">3</span>)</span><br><span class="line">    st2 = ScrolledText(win, height=<span class="number">10</span>, width=<span class="number">20</span>, state=DISABLED)</span><br><span class="line">    st2.grid(row=<span class="number">4</span>, column=<span class="number">1</span>, columnspan=<span class="number">3</span>, rowspan=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    Button(win, text=<span class="string">&#x27;转换&#x27;</span>, command=_write, width=<span class="number">10</span>,</span><br><span class="line">           height=<span class="number">6</span>).grid(row=<span class="number">0</span>, column=<span class="number">5</span>, rowspan=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    Button(win, text=<span class="string">&#x27;复制 选中状态&#x27;</span>, command=copy, width=<span class="number">10</span>,</span><br><span class="line">           height=<span class="number">3</span>).grid(row=<span class="number">5</span>, column=<span class="number">5</span>, rowspan=<span class="number">1</span>)</span><br><span class="line">    Button(win, text=<span class="string">&#x27;退出&#x27;</span>, command=exit, width=<span class="number">10</span>,</span><br><span class="line">           height=<span class="number">3</span>).grid(row=<span class="number">6</span>, column=<span class="number">5</span>, rowspan=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    mainloop()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#print(Shielding(input()))</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>点击此处下载源文件：<a href="https://www.yuque.com/attachments/yuque/0/2022/py/29771975/1664613976171-56214509-3a28-49e1-9c45-1fcc67437485.py?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2022%2Fpy%2F29771975%2F1664613976171-56214509-3a28-49e1-9c45-1fcc67437485.py%22%2C%22name%22%3A%22%E9%98%B2%E2%80%9C%E5%96%B5%E2%80%9D%E5%B7%A5%E5%85%B7.py%22%2C%22size%22%3A1446%2C%22type%22%3A%22text%2Fx-python%22%2C%22ext%22%3A%22py%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22mode%22%3A%22title%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u2fe4e8a0-6904-4ef9-b656-19862348378%22%2C%22taskType%22%3A%22upload%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ue759530e%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D">防“喵”工具.py</a><br />温馨提示，本软件需要安装Python编译器，<a href="https://www.python.org/downloads/">点击下载</a>。如无法访问，请前往<a href="https://community-static.codemao.cn/download/python-3.6.5.exe">这里</a>下载。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Codemao</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>爬取网页源代码</title>
    <url>/posts/6bc7efd8.html</url>
    <content><![CDATA[<p>爬取网页源代码，由haloged制作</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,easygui</span><br><span class="line">A = easygui.enterbox(i)</span><br><span class="line"><span class="keyword">if</span> ((A <span class="keyword">in</span> <span class="string">&quot;https://&quot;</span>) <span class="keyword">or</span> (A <span class="keyword">in</span> <span class="string">&quot;http://&quot;</span>)):</span><br><span class="line">    pachong_1 = requests.get(A)</span><br><span class="line"><span class="keyword">elif</span>((A <span class="keyword">in</span> <span class="string">&quot;edge://&quot;</span>) <span class="keyword">or</span> (A <span class="keyword">in</span> <span class="string">&quot;chorme://&quot;</span>)):</span><br><span class="line">    <span class="keyword">if</span> easygui.ynbox(<span class="string">&#x27;这个网站可能跟浏览器有关。如果爬取，可能会损坏浏览器。确定继续？&#x27;</span>,<span class="string">&#x27;爬取信息&#x27;</span>,(<span class="string">&#x27;确定爬取&#x27;</span>,<span class="string">&#x27;结束爬取&#x27;</span>)):</span><br><span class="line">        pachong_1 = requests.get(A)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span>(easygui.ynbox(<span class="string">&#x27;网站是否采用了https协议？&#x27;</span>,<span class="string">&#x27;爬取信息&#x27;</span>,(<span class="string">&#x27;已采用&#x27;</span>,<span class="string">&#x27;未采用&#x27;</span>))):</span><br><span class="line">        pachong_1 = requests.get(<span class="string">&quot;https://&quot;</span> + A)</span><br><span class="line">        A = <span class="string">&quot;https://&quot;</span> + A</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        pachong_1 = requests.get(<span class="string">&quot;http://&quot;</span> + A)</span><br><span class="line">        A = <span class="string">&quot;http://&quot;</span> + A</span><br><span class="line"><span class="keyword">if</span> A != <span class="literal">None</span>: </span><br><span class="line">    pachong_2 = pachong_1.text</span><br><span class="line">    easygui.msgbox(pachong_2,<span class="string">&#x27;爬取信息-&#x27;</span> + A,<span class="string">&#x27;结束&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>点击此处下载源文件：<a href="https://www.yuque.com/attachments/yuque/0/2022/py/29771975/1664613695402-aabd7ec9-0cc8-460b-995a-2bc5b5a5399b.py?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2022%2Fpy%2F29771975%2F1664613695402-aabd7ec9-0cc8-460b-995a-2bc5b5a5399b.py%22%2C%22name%22%3A%22%E7%88%AC%E5%8F%96%E6%BA%90%E4%BB%A3%E7%A0%81.py%22%2C%22size%22%3A748%2C%22type%22%3A%22text%2Fx-python%22%2C%22ext%22%3A%22py%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22mode%22%3A%22title%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u67a27d22-e8e8-4beb-94cd-36b98172d81%22%2C%22taskType%22%3A%22upload%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22u62192842%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D">爬取源代码.py</a><br />温馨提示，本软件需要安装Python编译器，<a href="https://www.python.org/downloads/">点击下载</a>。如无法访问，请前往<a href="https://community-static.codemao.cn/download/python-3.6.5.exehttps://community-static.codemao.cn/download/python-3.6.5.exe">这里</a>下载。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>绘制冰墩墩</title>
    <url>/posts/d2fbe29f.html</url>
    <content><![CDATA[<p>绘制冰墩墩，由haloged制作。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> truediv</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">turtle.speed(<span class="number">1</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">177</span>, <span class="number">112</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;lightgray&#x27;</span>)</span><br><span class="line">turtle.pensize(<span class="number">3</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">80</span>)</span><br><span class="line">turtle.circle((-<span class="number">45</span>), <span class="number">200</span>)</span><br><span class="line">turtle.circle((-<span class="number">300</span>), <span class="number">23</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">182</span>, <span class="number">95</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.pensize(<span class="number">1</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.setheading(<span class="number">95</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle((-<span class="number">37</span>), <span class="number">160</span>)</span><br><span class="line">turtle.circle((-<span class="number">20</span>), <span class="number">50</span>)</span><br><span class="line">turtle.circle((-<span class="number">200</span>), <span class="number">30</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">73</span>), <span class="number">230</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;lightgray&#x27;</span>)</span><br><span class="line">turtle.pensize(<span class="number">3</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">20</span>)</span><br><span class="line">turtle.circle((-<span class="number">250</span>), <span class="number">35</span>)</span><br><span class="line">turtle.setheading(<span class="number">50</span>)</span><br><span class="line">turtle.circle((-<span class="number">42</span>), <span class="number">180</span>)</span><br><span class="line">turtle.setheading((-<span class="number">50</span>))</span><br><span class="line">turtle.circle((-<span class="number">190</span>), <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">320</span>), <span class="number">45</span>)</span><br><span class="line">turtle.circle(<span class="number">120</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">12</span>)</span><br><span class="line">turtle.circle((-<span class="number">18</span>), <span class="number">85</span>)</span><br><span class="line">turtle.circle((-<span class="number">180</span>), <span class="number">23</span>)</span><br><span class="line">turtle.circle((-<span class="number">20</span>), <span class="number">110</span>)</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">115</span>)</span><br><span class="line">turtle.circle(<span class="number">100</span>, <span class="number">12</span>)</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">120</span>)</span><br><span class="line">turtle.circle((-<span class="number">15</span>), <span class="number">110</span>)</span><br><span class="line">turtle.circle((-<span class="number">150</span>), <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">15</span>), <span class="number">70</span>)</span><br><span class="line">turtle.circle((-<span class="number">150</span>), <span class="number">10</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">35</span>)</span><br><span class="line">turtle.circle((-<span class="number">150</span>), <span class="number">20</span>)</span><br><span class="line">turtle.setheading((-<span class="number">120</span>))</span><br><span class="line">turtle.circle(<span class="number">50</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">35</span>), <span class="number">200</span>)</span><br><span class="line">turtle.circle((-<span class="number">300</span>), <span class="number">23</span>)</span><br><span class="line">turtle.setheading(<span class="number">86</span>)</span><br><span class="line">turtle.circle((-<span class="number">300</span>), <span class="number">26</span>)</span><br><span class="line">turtle.setheading(<span class="number">122</span>)</span><br><span class="line">turtle.circle((-<span class="number">53</span>), <span class="number">160</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">130</span>), <span class="number">180</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.pensize(<span class="number">1</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">120</span>)</span><br><span class="line">turtle.circle((-<span class="number">28</span>), <span class="number">160</span>)</span><br><span class="line">turtle.setheading(<span class="number">210</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>, <span class="number">20</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">90</span>, <span class="number">230</span>)</span><br><span class="line">turtle.setheading(<span class="number">40</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle((-<span class="number">30</span>), <span class="number">170</span>)</span><br><span class="line">turtle.setheading(<span class="number">125</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>, <span class="number">23</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">180</span>), (-<span class="number">55</span>))</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.setheading((-<span class="number">120</span>))</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(<span class="number">50</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">27</span>), <span class="number">200</span>)</span><br><span class="line">turtle.circle((-<span class="number">300</span>), <span class="number">20</span>)</span><br><span class="line">turtle.setheading((-<span class="number">90</span>))</span><br><span class="line">turtle.circle(<span class="number">300</span>, <span class="number">14</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">108</span>, (-<span class="number">168</span>))</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading((-<span class="number">115</span>))</span><br><span class="line">turtle.circle(<span class="number">110</span>, <span class="number">15</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">10</span>)</span><br><span class="line">turtle.circle((-<span class="number">18</span>), <span class="number">80</span>)</span><br><span class="line">turtle.circle((-<span class="number">180</span>), <span class="number">13</span>)</span><br><span class="line">turtle.circle((-<span class="number">20</span>), <span class="number">90</span>)</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">60</span>)</span><br><span class="line">turtle.setheading(<span class="number">42</span>)</span><br><span class="line">turtle.circle((-<span class="number">200</span>), <span class="number">29</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">38</span>), (-<span class="number">210</span>))</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading((-<span class="number">155</span>))</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">100</span>)</span><br><span class="line">turtle.circle((-<span class="number">10</span>), <span class="number">110</span>)</span><br><span class="line">turtle.circle((-<span class="number">100</span>), <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">15</span>), <span class="number">65</span>)</span><br><span class="line">turtle.circle((-<span class="number">100</span>), <span class="number">10</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">15</span>)</span><br><span class="line">turtle.setheading((-<span class="number">14</span>))</span><br><span class="line">turtle.circle((-<span class="number">200</span>), <span class="number">27</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">64</span>), <span class="number">120</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">40</span>)</span><br><span class="line">turtle.circle((-<span class="number">35</span>), <span class="number">152</span>)</span><br><span class="line">turtle.circle((-<span class="number">100</span>), <span class="number">50</span>)</span><br><span class="line">turtle.circle((-<span class="number">35</span>), <span class="number">130</span>)</span><br><span class="line">turtle.circle((-<span class="number">100</span>), <span class="number">50</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">47</span>), <span class="number">55</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">25</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">45</span>), <span class="number">62</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;darkslategray&#x27;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;darkslategray&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">19</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">45</span>), <span class="number">68</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">10</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">47</span>), <span class="number">86</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">5</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">51</span>, <span class="number">82</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">120</span>)</span><br><span class="line">turtle.circle((-<span class="number">32</span>), <span class="number">152</span>)</span><br><span class="line">turtle.circle((-<span class="number">100</span>), <span class="number">55</span>)</span><br><span class="line">turtle.circle((-<span class="number">25</span>), <span class="number">120</span>)</span><br><span class="line">turtle.circle((-<span class="number">120</span>), <span class="number">45</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">60</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">24</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">64</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;darkslategray&#x27;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;darkslategray&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">19</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">70</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">10</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">88</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">5</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">37</span>, <span class="number">80</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle((-<span class="number">8</span>), <span class="number">130</span>)</span><br><span class="line">turtle.circle((-<span class="number">22</span>), <span class="number">100</span>)</span><br><span class="line">turtle.circle((-<span class="number">8</span>), <span class="number">130</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">15</span>), <span class="number">48</span>)</span><br><span class="line">turtle.setheading((-<span class="number">36</span>))</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(<span class="number">60</span>, <span class="number">70</span>)</span><br><span class="line">turtle.setheading((-<span class="number">132</span>))</span><br><span class="line">turtle.circle((-<span class="number">45</span>), <span class="number">100</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">135</span>), <span class="number">120</span>)</span><br><span class="line">turtle.pensize(<span class="number">5</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;cyan&#x27;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle((-<span class="number">165</span>), <span class="number">150</span>)</span><br><span class="line">turtle.circle((-<span class="number">130</span>), <span class="number">78</span>)</span><br><span class="line">turtle.circle((-<span class="number">250</span>), <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">138</span>), <span class="number">105</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">131</span>), <span class="number">116</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;slateblue&#x27;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle((-<span class="number">160</span>), <span class="number">144</span>)</span><br><span class="line">turtle.circle((-<span class="number">120</span>), <span class="number">78</span>)</span><br><span class="line">turtle.circle((-<span class="number">242</span>), <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">135</span>), <span class="number">105</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">127</span>), <span class="number">112</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;orangered&#x27;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle((-<span class="number">155</span>), <span class="number">136</span>)</span><br><span class="line">turtle.circle((-<span class="number">116</span>), <span class="number">86</span>)</span><br><span class="line">turtle.circle((-<span class="number">220</span>), <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">134</span>), <span class="number">103</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">123</span>), <span class="number">108</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;gold&#x27;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle((-<span class="number">150</span>), <span class="number">136</span>)</span><br><span class="line">turtle.circle((-<span class="number">104</span>), <span class="number">86</span>)</span><br><span class="line">turtle.circle((-<span class="number">220</span>), <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">126</span>), <span class="number">102</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">120</span>), <span class="number">104</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;greenyellow&#x27;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle((-<span class="number">145</span>), <span class="number">136</span>)</span><br><span class="line">turtle.circle((-<span class="number">90</span>), <span class="number">83</span>)</span><br><span class="line">turtle.circle((-<span class="number">220</span>), <span class="number">30</span>)</span><br><span class="line">turtle.circle((-<span class="number">120</span>), <span class="number">100</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line"><span class="comment"># 爱心</span></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">220</span>, <span class="number">115</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;brown&#x27;</span>)</span><br><span class="line">turtle.pensize(<span class="number">1</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&#x27;brown&#x27;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">36</span>)</span><br><span class="line">turtle.circle((-<span class="number">8</span>), <span class="number">180</span>)</span><br><span class="line">turtle.circle((-<span class="number">60</span>), <span class="number">24</span>)</span><br><span class="line">turtle.setheading(<span class="number">110</span>)</span><br><span class="line">turtle.circle((-<span class="number">60</span>), <span class="number">24</span>)</span><br><span class="line">turtle.circle((-<span class="number">8</span>), <span class="number">180</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"><span class="comment"># 五环</span></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto((-<span class="number">5</span>), (-<span class="number">170</span>))</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">10</span>, (-<span class="number">170</span>))</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">25</span>, (-<span class="number">170</span>))</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;brown&#x27;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">2</span>, (-<span class="number">175</span>))</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;lightgoldenrod&#x27;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">16</span>, (-<span class="number">175</span>))</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">turtle.goto((-<span class="number">16</span>), (-<span class="number">160</span>))</span><br><span class="line">turtle.write(<span class="string">&quot;BEIJING 2022&quot;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">10</span>, <span class="string">&#x27;bold italic&#x27;</span>))</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line">turtle.hideturtle()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>点击此处下载源文件：<a href="https://www.yuque.com/attachments/yuque/0/2022/py/29771975/1664613826810-a733f396-7b71-4494-817c-a21bdb981a59.py?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2022%2Fpy%2F29771975%2F1664613826810-a733f396-7b71-4494-817c-a21bdb981a59.py%22%2C%22name%22%3A%22%E5%86%B0%E5%A2%A9%E5%A2%A9.py%22%2C%22size%22%3A7229%2C%22type%22%3A%22text%2Fx-python%22%2C%22ext%22%3A%22py%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22mode%22%3A%22title%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u914766a2-d509-4784-8a66-23838052b4f%22%2C%22taskType%22%3A%22upload%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22u375c7025%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D">冰墩墩.py</a><br />温馨提示，本软件需要安装Python编译器，<a href="https://www.python.org/downloads/">点击下载</a>。如无法访问，请前往<a href="https://community-static.codemao.cn/download/python-3.6.5.exe">这里</a>下载。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>MD5转换器</title>
    <url>/posts/c8ea5f0f.html</url>
    <content><![CDATA[<p>MD5转换器，由haloged出品</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">LOG_LINE_NUM = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MY_GUI</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,init_window_name</span>):</span><br><span class="line">        self.init_window_name = init_window_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置窗口</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_init_window</span>(<span class="params">self</span>):</span><br><span class="line">        self.init_window_name.title(<span class="string">&quot;文本处理工具_v1.2&quot;</span>)           <span class="comment">#窗口名</span></span><br><span class="line">        <span class="comment">#self.init_window_name.geometry(&#x27;320x160+10+10&#x27;)                         #290 160为窗口大小，+10 +10 定义窗口弹出时的默认展示位置</span></span><br><span class="line">        self.init_window_name.geometry(<span class="string">&#x27;1068x681+10+10&#x27;</span>)</span><br><span class="line">        <span class="comment">#self.init_window_name[&quot;bg&quot;] = &quot;pink&quot;                                    #窗口背景色，其他背景色见：blog.csdn.net/chl0000/article/details/7657887</span></span><br><span class="line">        <span class="comment">#self.init_window_name.attributes(&quot;-alpha&quot;,0.9)                          #虚化，值越小虚化程度越高</span></span><br><span class="line">        <span class="comment">#标签</span></span><br><span class="line">        self.init_data_label = Label(self.init_window_name, text=<span class="string">&quot;待处理数据&quot;</span>)</span><br><span class="line">        self.init_data_label.grid(row=<span class="number">0</span>, column=<span class="number">0</span>)</span><br><span class="line">        self.result_data_label = Label(self.init_window_name, text=<span class="string">&quot;输出结果&quot;</span>)</span><br><span class="line">        self.result_data_label.grid(row=<span class="number">0</span>, column=<span class="number">12</span>)</span><br><span class="line">        self.log_label = Label(self.init_window_name, text=<span class="string">&quot;日志&quot;</span>)</span><br><span class="line">        self.log_label.grid(row=<span class="number">12</span>, column=<span class="number">0</span>)</span><br><span class="line">        <span class="comment">#文本框</span></span><br><span class="line">        self.init_data_Text = Text(self.init_window_name, width=<span class="number">67</span>, height=<span class="number">35</span>)  <span class="comment">#原始数据录入框</span></span><br><span class="line">        self.init_data_Text.grid(row=<span class="number">1</span>, column=<span class="number">0</span>, rowspan=<span class="number">10</span>, columnspan=<span class="number">10</span>)</span><br><span class="line">        self.result_data_Text = Text(self.init_window_name, width=<span class="number">70</span>, height=<span class="number">49</span>)  <span class="comment">#处理结果展示</span></span><br><span class="line">        self.result_data_Text.grid(row=<span class="number">1</span>, column=<span class="number">12</span>, rowspan=<span class="number">15</span>, columnspan=<span class="number">10</span>)</span><br><span class="line">        self.log_data_Text = Text(self.init_window_name, width=<span class="number">66</span>, height=<span class="number">9</span>)  <span class="comment"># 日志框</span></span><br><span class="line">        self.log_data_Text.grid(row=<span class="number">13</span>, column=<span class="number">0</span>, columnspan=<span class="number">10</span>)</span><br><span class="line">        <span class="comment">#按钮</span></span><br><span class="line">        self.str_trans_to_md5_button = Button(self.init_window_name, text=<span class="string">&quot;字符串转MD5&quot;</span>, bg=<span class="string">&quot;lightblue&quot;</span>, width=<span class="number">10</span>,command=self.str_trans_to_md5)  <span class="comment"># 调用内部方法  加()为直接调用</span></span><br><span class="line">        self.str_trans_to_md5_button.grid(row=<span class="number">1</span>, column=<span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#功能函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">str_trans_to_md5</span>(<span class="params">self</span>):</span><br><span class="line">        src = self.init_data_Text.get(<span class="number">1.0</span>,END).strip().replace(<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>,<span class="string">&quot;&quot;</span>).encode()</span><br><span class="line">        <span class="comment">#print(&quot;src =&quot;,src)</span></span><br><span class="line">        <span class="keyword">if</span> src:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                myMd5 = hashlib.md5()</span><br><span class="line">                myMd5.update(src)</span><br><span class="line">                myMd5_Digest = myMd5.hexdigest()</span><br><span class="line">                <span class="comment">#print(myMd5_Digest)</span></span><br><span class="line">                <span class="comment">#输出到界面</span></span><br><span class="line">                self.result_data_Text.delete(<span class="number">1.0</span>,END)</span><br><span class="line">                self.result_data_Text.insert(<span class="number">1.0</span>,myMd5_Digest)</span><br><span class="line">                self.write_log_to_Text(<span class="string">&quot;INFO:str_trans_to_md5 success&quot;</span>)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                self.result_data_Text.delete(<span class="number">1.0</span>,END)</span><br><span class="line">                self.result_data_Text.insert(<span class="number">1.0</span>,<span class="string">&quot;字符串转MD5失败&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.write_log_to_Text(<span class="string">&quot;ERROR:str_trans_to_md5 failed&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取当前时间</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_current_time</span>(<span class="params">self</span>):</span><br><span class="line">        current_time = time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>,time.localtime(time.time()))</span><br><span class="line">        <span class="keyword">return</span> current_time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#日志动态打印</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write_log_to_Text</span>(<span class="params">self,logmsg</span>):</span><br><span class="line">        <span class="keyword">global</span> LOG_LINE_NUM</span><br><span class="line">        current_time = self.get_current_time()</span><br><span class="line">        logmsg_in = <span class="built_in">str</span>(current_time) +<span class="string">&quot; &quot;</span> + <span class="built_in">str</span>(logmsg) + <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>      <span class="comment">#换行</span></span><br><span class="line">        <span class="keyword">if</span> LOG_LINE_NUM &lt;= <span class="number">7</span>:</span><br><span class="line">            self.log_data_Text.insert(END, logmsg_in)</span><br><span class="line">            LOG_LINE_NUM = LOG_LINE_NUM + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.log_data_Text.delete(<span class="number">1.0</span>,<span class="number">2.0</span>)</span><br><span class="line">            self.log_data_Text.insert(END, logmsg_in)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gui_start</span>():</span><br><span class="line">    init_window = Tk()              <span class="comment">#实例化出一个父窗口</span></span><br><span class="line">    ZMJ_PORTAL = MY_GUI(init_window)</span><br><span class="line">    <span class="comment"># 设置根窗口默认属性</span></span><br><span class="line">    ZMJ_PORTAL.set_init_window()</span><br><span class="line"></span><br><span class="line">    init_window.mainloop()          <span class="comment">#父窗口进入事件循环，可以理解为保持窗口运行，否则界面不展示</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gui_start()</span><br></pre></td></tr></table></figure>
<p>点击此处下载原文件：<a href="https://www.yuque.com/attachments/yuque/0/2022/py/29771975/1664030763619-9ea55a5c-f92b-47d7-8838-97bec5fabf9e.py?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2022%2Fpy%2F29771975%2F1664030763619-9ea55a5c-f92b-47d7-8838-97bec5fabf9e.py%22%2C%22name%22%3A%22tk.py%22%2C%22size%22%3A3920%2C%22type%22%3A%22text%2Fx-python%22%2C%22ext%22%3A%22py%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22mode%22%3A%22title%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22ueb4e3ee6-cb98-4073-afc6-2813c0fe821%22%2C%22taskType%22%3A%22upload%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Htu1B%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D">tk.py</a><br />温馨提示，本软件需要安装Python编译器，<a href="https://www.python.org/downloads/">点击下载</a>。如无法访问，请前往<a href="https://community-static.codemao.cn/download/python-3.6.5.exe">这里</a>下载。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>利率计算器</title>
    <url>/posts/3d96aee9.html</url>
    <content><![CDATA[<p>利率计算器，由haloged出品。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">daikuanCalc</span>(<span class="title class_ inherited__">Frame</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span><br><span class="line">        Frame.__init__(self, parent)</span><br><span class="line">        self.pack()</span><br><span class="line"></span><br><span class="line">        self.yearsVar = StringVar()  <span class="comment"># 贷款年限</span></span><br><span class="line">        self.amountVar = StringVar()  <span class="comment"># 贷款金额</span></span><br><span class="line">        self.rateVar = StringVar()  <span class="comment"># 贷款利率</span></span><br><span class="line">        self.total1Var = StringVar()  <span class="comment"># 总还款额</span></span><br><span class="line">        self.totalInterest1Var = StringVar()  <span class="comment"># 总利息额</span></span><br><span class="line">        self.monthRepay = StringVar()  <span class="comment"># 月均还款</span></span><br><span class="line"></span><br><span class="line">        Label(self, text=<span class="string">&quot;&quot;</span>).grid(row=<span class="number">0</span>, column=<span class="number">0</span>, columnspan=<span class="number">6</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;还款方式&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), height=<span class="number">2</span>).grid(row=<span class="number">1</span>, column=<span class="number">0</span>, columnspan=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;:&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>)).grid(row=<span class="number">1</span>, column=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;贷款年限&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), height=<span class="number">2</span>).grid(row=<span class="number">3</span>, column=<span class="number">0</span>, columnspan=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;(年):&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>)).grid(row=<span class="number">3</span>, column=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;贷款金额&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), height=<span class="number">2</span>).grid(row=<span class="number">5</span>, column=<span class="number">0</span>, columnspan=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;(万元):&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>)).grid(row=<span class="number">5</span>, column=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;贷款利率&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), height=<span class="number">2</span>).grid(row=<span class="number">7</span>, column=<span class="number">0</span>, columnspan=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;(%):&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>)).grid(row=<span class="number">7</span>, column=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;月均还款&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>)).grid(row=<span class="number">11</span>, column=<span class="number">0</span>, columnspan=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;(元):&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), height=<span class="number">2</span>).grid(row=<span class="number">11</span>, column=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;利息总额&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>)).grid(row=<span class="number">13</span>, column=<span class="number">0</span>, columnspan=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;(元):&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), height=<span class="number">2</span>).grid(row=<span class="number">13</span>, column=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;还款总额&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>)).grid(row=<span class="number">15</span>, column=<span class="number">0</span>, columnspan=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Label(self, text=<span class="string">&quot;(元):&quot;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), height=<span class="number">2</span>).grid(row=<span class="number">15</span>, column=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        Entry(self, textvariable=self.yearsVar).grid(row=<span class="number">3</span>, column=<span class="number">4</span>, columnspan=<span class="number">5</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Entry(self, textvariable=self.amountVar).grid(row=<span class="number">5</span>, column=<span class="number">4</span>, columnspan=<span class="number">5</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Entry(self, textvariable=self.rateVar).grid(row=<span class="number">7</span>, column=<span class="number">4</span>, columnspan=<span class="number">5</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Entry(self, textvariable=self.monthRepay).grid(row=<span class="number">11</span>, column=<span class="number">4</span>, columnspan=<span class="number">5</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Entry(self, textvariable=self.totalInterest1Var).grid(row=<span class="number">13</span>, column=<span class="number">4</span>, columnspan=<span class="number">5</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Entry(self, textvariable=self.total1Var).grid(row=<span class="number">15</span>, column=<span class="number">4</span>, columnspan=<span class="number">5</span>, rowspan=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        val = IntVar()  <span class="comment"># 获取单选按钮的值</span></span><br><span class="line">        val.<span class="built_in">set</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        r0 = Radiobutton(self, text=<span class="string">&#x27;等额本息&#x27;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), variable=val, value=<span class="number">0</span>, height=<span class="number">2</span>)</span><br><span class="line">        r0.grid(row=<span class="number">1</span>, column=<span class="number">4</span>, columnspan=<span class="number">3</span>)</span><br><span class="line">        r1 = Radiobutton(self, text=<span class="string">&#x27;等额本金&#x27;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), variable=val, value=<span class="number">1</span>, height=<span class="number">2</span>)</span><br><span class="line">        r1.grid(row=<span class="number">1</span>, column=<span class="number">7</span>, columnspan=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">cmd</span>():</span><br><span class="line">        <span class="keyword">if</span> val.get() == <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># 获取输入的参数</span></span><br><span class="line"></span><br><span class="line">        years = <span class="built_in">eval</span>(self.yearsVar.get())  <span class="comment"># 贷款年限</span></span><br><span class="line">        amount = <span class="built_in">eval</span>(self.amountVar.get())  <span class="comment"># 贷款本金</span></span><br><span class="line">        rate = <span class="built_in">eval</span>(self.rateVar.get()) / <span class="number">100</span> / <span class="number">12</span>  <span class="comment"># 将年化利率转为月利率，单位为1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算每月还款</span></span><br><span class="line">        monthRepayment = (amount * rate * ((<span class="number">1</span> + rate) ** (years * <span class="number">12</span>))) / ((<span class="number">1.0</span> + rate) ** (years * <span class="number">12</span>) - <span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 显示计算结果</span></span><br><span class="line">        total = monthRepayment * <span class="number">12</span> * years  <span class="comment"># 总还款金额</span></span><br><span class="line">        self.total1Var.<span class="built_in">set</span>(<span class="built_in">format</span>(total, <span class="string">&quot;.3f&quot;</span>))</span><br><span class="line">        self.monthRepay.<span class="built_in">set</span>(<span class="built_in">format</span>(monthRepayment, <span class="string">&#x27;.3f&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        totalInterest = total - amount  <span class="comment"># 总利息</span></span><br><span class="line">        self.totalInterest1Var.<span class="built_in">set</span>(<span class="built_in">format</span>(totalInterest, <span class="string">&#x27;.3f&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取输入的参数</span></span><br><span class="line">        years = <span class="built_in">eval</span>(self.yearsVar.get())  <span class="comment"># 贷款年限</span></span><br><span class="line">        amount = <span class="built_in">eval</span>(self.amountVar.get())  <span class="comment"># 贷款本金</span></span><br><span class="line">        rate = <span class="built_in">eval</span>(self.rateVar.get()) / <span class="number">100</span> / <span class="number">12</span>  <span class="comment"># 将年化利率转为月利率，单位为1</span></span><br><span class="line">        month_amount = amount / (years * <span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 储存月均还款</span></span><br><span class="line">        monthRepayment = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, (years * <span class="number">12</span>) + <span class="number">1</span>):</span><br><span class="line">        monthpayment = month_amount + (amount - (i - <span class="number">1</span>) * month_amount) * rate</span><br><span class="line">        monthRepayment.append(monthpayment)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 显示结果</span></span><br><span class="line">        total = <span class="built_in">sum</span>(monthRepayment)</span><br><span class="line">        self.total1Var.<span class="built_in">set</span>(<span class="built_in">format</span>(total, <span class="string">&quot;.3f&quot;</span>))</span><br><span class="line">        self.monthRepay.<span class="built_in">set</span>(<span class="built_in">format</span>(total / (years * <span class="number">12</span>), <span class="string">&#x27;.3f&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        totalInterest = total - amount</span><br><span class="line">        self.totalInterest1Var.<span class="built_in">set</span>(<span class="built_in">format</span>(totalInterest, <span class="string">&#x27;.3f&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">clear</span>():  <span class="comment"># 重新计算时清空</span></span><br><span class="line">        self.yearsVar.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        self.amountVar.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        self.rateVar.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        self.total1Var.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        self.totalInterest1Var.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        self.monthRepay.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        Button(self, text=<span class="string">&#x27;计 算&#x27;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), width=<span class="string">&#x27;10&#x27;</span>, command=cmd).grid(row=<span class="number">9</span>, column=<span class="number">3</span>, rowspan=<span class="number">2</span>)</span><br><span class="line">        Button(self, text=<span class="string">&#x27;重新计算&#x27;</span>, font=(<span class="string">&#x27;楷体&#x27;</span>, <span class="number">15</span>), width=<span class="string">&#x27;10&#x27;</span>, command=clear).grid(row=<span class="number">9</span>, column=<span class="number">5</span>, columnspan=<span class="number">3</span>,</span><br><span class="line">        rowspan=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        app = Tk()</span><br><span class="line">        app.title(<span class="string">&#x27;贷款计算器&#x27;</span>)</span><br><span class="line">        app.resizable(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        apps = daikuanCalc(app)</span><br><span class="line">        app.resizable(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        app.mainloop()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>点击此处下载原文件：<a href="https://www.yuque.com/attachments/yuque/0/2022/py/29771975/1662780878228-ff0b2990-b2de-4274-b332-7de16280e16b.py?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2022%2Fpy%2F29771975%2F1662780878228-ff0b2990-b2de-4274-b332-7de16280e16b.py%22%2C%22name%22%3A%22%E5%88%A9%E7%8E%87%E8%AE%A1%E7%AE%97%E5%99%A8.py%22%2C%22size%22%3A5646%2C%22type%22%3A%22text%2Fx-python%22%2C%22ext%22%3A%22py%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22mode%22%3A%22title%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u7d4c1ae3-6eab-4658-8273-452ba516ff5%22%2C%22taskType%22%3A%22upload%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22u3d60b559%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D">利率计算器.py</a><br />温馨提示，本软件需要安装Python编译器，<a href="https://www.python.org/downloads/">点击下载</a>。如无法访问，请前往<a href="https://community-static.codemao.cn/download/python-3.6.5.exe">这里</a>下载。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>haloged支付</title>
    <url>/posts/eb3c7af5.html</url>
    <content><![CDATA[<p>haloged支付，由haloged制作。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">mon = <span class="number">1000</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;欢迎来到haloged支付&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.支付&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;2.余额&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;3.收款码&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;4.关于软件&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;5.退出&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;每周四是haloged支付的会员日，享8折优惠哦！&#x27;</span>)</span><br><span class="line">    start = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;我是您的私人管家，请问有什么可以帮您？&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> (start == <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;正在加载中......&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;加载成功！&#x27;</span>)</span><br><span class="line">        vip = <span class="built_in">input</span>(<span class="string">&#x27;请问您有没有haloged会员？y/n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (vip == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> vip == <span class="string">&#x27;Y&#x27;</span>):</span><br><span class="line">            week = <span class="built_in">input</span>(<span class="string">&#x27;今天是星期几？[纯数字]&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> (week == <span class="number">4</span>):</span><br><span class="line">                commodity1 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第一个商品的价格：[数字带小数点][每次只能支付三个商品]&#x27;</span>))</span><br><span class="line">                commodity2 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第二个商品的价格：[数字带小数点][每次只能支付三个商品]&#x27;</span>))</span><br><span class="line">                commodity3 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第三个商品的价格：[数字带小数点][每次只能支付三个商品]&#x27;</span>))</span><br><span class="line">                money = (commodity1 + (commodity2 + commodity3 * <span class="number">0.8</span>))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;一共是&#x27;</span>,money,<span class="string">&#x27;元&#x27;</span>)</span><br><span class="line">                allow = <span class="built_in">input</span>(<span class="string">&#x27;是否支付？y/n&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> (allow == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> allow == <span class="string">&#x27;Y&#x27;</span>):</span><br><span class="line">                    <span class="keyword">if</span> (mon &gt;= money):</span><br><span class="line">                        mon = (mon + money)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;支付成功！&#x27;</span>)</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span> :</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;余额不足&#x27;</span>)</span><br><span class="line">                <span class="keyword">elif</span> (allow == <span class="string">&#x27;n&#x27;</span> <span class="keyword">or</span> allow == <span class="string">&#x27;N&#x27;</span>) :</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">else</span> :</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;输入错误&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                commodity21 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第一个商品的价格：[数字带小数点][每次只能支付三个商品]&#x27;</span>))</span><br><span class="line">                commodity22 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第二个商品的价格：[数字带小数点][每次只能支付三个商品]&#x27;</span>))</span><br><span class="line">                commodity23 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第三个商品的价格：[数字带小数点][每次只能支付三个商品]&#x27;</span>))</span><br><span class="line">                money2 = (commodity21 + (commodity22 + commodity23))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;一共是&#x27;</span>,money2,<span class="string">&#x27;元&#x27;</span>)</span><br><span class="line">                allow2 = <span class="built_in">input</span>(<span class="string">&#x27;是否支付？y/n&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> (allow2 == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> allow2 == <span class="string">&#x27;Y&#x27;</span>):</span><br><span class="line">                    <span class="keyword">if</span> (mon &gt;= money2):</span><br><span class="line">                        mon = (mon + money2)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;支付成功！&#x27;</span>)</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span> :</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;余额不足&#x27;</span>)</span><br><span class="line">                <span class="keyword">elif</span> (allow == <span class="string">&#x27;n&#x27;</span> <span class="keyword">or</span> allow == <span class="string">&#x27;N&#x27;</span>) :</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">else</span> :</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;输入错误&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> (vip == <span class="string">&#x27;N&#x27;</span> <span class="keyword">or</span> vip == <span class="string">&#x27;n&#x27;</span>) :</span><br><span class="line">            commodity31 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第一个商品的价格：[数字带小数点][每次只能支付三个商品]&#x27;</span>))</span><br><span class="line">            commodity32 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第二个商品的价格：[数字带小数点][每次只能支付三个商品]&#x27;</span>))</span><br><span class="line">            commodity33 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第三个商品的价格：[数字带小数点][每次只能支付三个商品]&#x27;</span>))</span><br><span class="line">            money3 = (commodity31 + (commodity32 + commodity33))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;一共是&#x27;</span>,money3,<span class="string">&#x27;元&#x27;</span>)</span><br><span class="line">            allow3 = <span class="built_in">input</span>(<span class="string">&#x27;是否支付？y/n&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> (allow3 == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> allow3 == <span class="string">&#x27;Y&#x27;</span>):</span><br><span class="line">                <span class="keyword">if</span> (mon &gt;= money3):</span><br><span class="line">                    mon = (mon + money3)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;支付成功！&#x27;</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">else</span> :</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;余额不足&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> (allow == <span class="string">&#x27;n&#x27;</span> <span class="keyword">or</span> allow == <span class="string">&#x27;N&#x27;</span>) :</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;输入错误&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;输入错误&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> (start == <span class="number">2</span>) :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;正在加载中......&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;您的余额是&#x27;</span>,mon,<span class="string">&#x27;元&#x27;</span>)</span><br><span class="line">        recharge = <span class="built_in">input</span>(<span class="string">&#x27;是否充值？y/n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (recharge == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> recharge == <span class="string">&#x27;Y&#x27;</span>):</span><br><span class="line">            much = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;充多少？&#x27;</span>))</span><br><span class="line">            mon = (mon + much)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;正在充值......&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;充值成功！&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> (start == <span class="number">3</span>) :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;正在加载中......&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;功能开发中，敬请期待！&#x27;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> (start == <span class="number">4</span>) :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;正在加载中......&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;关于软件&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;软件作者：谨慎的熔岩龙Ef_m&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;作者B站主页：https://space.bilibili.com/518055250&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;作者编程猫主页：https://shequ.codemao.cn/user/493919874&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;软件版本：v0.0.1&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;更新日志请查看https://www.yuque.com/haloged/uw43rd/ewk9gi&#x27;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> (start == <span class="number">5</span>) :</span><br><span class="line">        signout = <span class="built_in">input</span>(<span class="string">&#x27;是否退出？&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (signout == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> signout == <span class="string">&#x27;Y&#x27;</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> (signout == <span class="string">&#x27;n&#x27;</span> <span class="keyword">or</span> signout == <span class="string">&#x27;N&#x27;</span>) :</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;输入错误&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;输入错误&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>下载：<a href="https://www.yuque.com/attachments/yuque/0/2022/py/29771975/1661935131503-8b02e418-35ec-41e4-ada8-26ce65c64eeb.py?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2022%2Fpy%2F29771975%2F1661935131503-8b02e418-35ec-41e4-ada8-26ce65c64eeb.py%22%2C%22name%22%3A%22%E6%94%AF%E4%BB%98.py%22%2C%22size%22%3A5169%2C%22type%22%3A%22text%2Fx-python%22%2C%22ext%22%3A%22py%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22mode%22%3A%22title%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u29998f8b-cdf2-44b1-8a2a-83127101174%22%2C%22taskType%22%3A%22upload%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22u8b0cacfb%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D">支付.py</a><br />温馨提示，本软件需要安装Python编译器，<a href="https://www.python.org/downloads/">点击下载</a>。如无法访问，请前往<a href="https://community-static.codemao.cn/download/python-3.6.5.exe">这里</a>下载。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>学生报到管理</title>
    <url>/posts/49609453.html</url>
    <content><![CDATA[<p>学生报到管理，由haloged制作。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">s1=<span class="string">&quot;n&quot;</span></span><br><span class="line">s2=<span class="string">&quot;n&quot;</span></span><br><span class="line">s3=<span class="string">&quot;n&quot;</span></span><br><span class="line">s4=<span class="string">&quot;n&quot;</span></span><br><span class="line">s5=<span class="string">&quot;n&quot;</span></span><br><span class="line">s6=<span class="string">&quot;n&quot;</span></span><br><span class="line">s7=<span class="string">&quot;n&quot;</span></span><br><span class="line">s8=<span class="string">&quot;n&quot;</span></span><br><span class="line">s9=<span class="string">&quot;n&quot;</span></span><br><span class="line">s10=<span class="string">&quot;n&quot;</span></span><br><span class="line">s11=<span class="string">&quot;n&quot;</span></span><br><span class="line">s12=<span class="string">&quot;n&quot;</span></span><br><span class="line">s13=<span class="string">&quot;n&quot;</span></span><br><span class="line">s14=<span class="string">&quot;n&quot;</span></span><br><span class="line">s15=<span class="string">&quot;n&quot;</span></span><br><span class="line">s16=<span class="string">&quot;n&quot;</span></span><br><span class="line">s17=<span class="string">&quot;n&quot;</span></span><br><span class="line">s18=<span class="string">&quot;n&quot;</span></span><br><span class="line">s19=<span class="string">&quot;n&quot;</span></span><br><span class="line">s20=<span class="string">&quot;n&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;欢迎来到湘钢三校报到系统&quot;</span>)</span><br><span class="line">    num=<span class="built_in">input</span>(<span class="string">&quot;请输入你的学号&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> num==<span class="string">&quot;1&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s1=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;2&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s2=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;3&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s3=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;4&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s4=<span class="string">&quot;y&quot;</span>    </span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;5&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s5=<span class="string">&quot;y&quot;</span>        </span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;6&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s6=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;7&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s7=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;8&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s8=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;9&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s9=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;10&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s10=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;11&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s11=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;12&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s12=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;13&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s13=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;14&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s14=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;15&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s15=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;16&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s16=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;17&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s17=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;18&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s18=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;19&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s19=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;20&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">        s20=<span class="string">&quot;y&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> num==<span class="string">&quot;12345qwert&quot;</span>:</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;===============================湘钢三校签到管理系统=============================&quot;</span>)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s1&quot;</span>,s1)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s2&quot;</span>,s2)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s3&quot;</span>,s3)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s4&quot;</span>,s4)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s5&quot;</span>,s5)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s6&quot;</span>,s6)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s7&quot;</span>,s7)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s8&quot;</span>,s8)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s9&quot;</span>,s9)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s10&quot;</span>,s10)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s11&quot;</span>,s11)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s12&quot;</span>,s12)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s13&quot;</span>,s13)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s14&quot;</span>,s14)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s15&quot;</span>,s15)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s16&quot;</span>,s16)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s17&quot;</span>,s17)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s18&quot;</span>,s18)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s19&quot;</span>,s19)</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;s20&quot;</span>,s20)</span><br><span class="line">    ss=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;搜索&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> ss==<span class="string">&quot;1&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;1&quot;</span>,s1)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;2&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;2&quot;</span>,s2)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;3&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;3&quot;</span>,s3)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;4&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;4&quot;</span>,s4)   </span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;5&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;5&quot;</span>,s5)      </span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;6&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;6&quot;</span>,s6)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;7&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;7&quot;</span>,s7)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;8&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;8&quot;</span>,s8)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;9&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;9&quot;</span>,s9)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;10&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;10&quot;</span>,s10)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;11&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;11&quot;</span>,s11)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;12&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;12&quot;</span>,s12)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;13&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;13&quot;</span>,s13)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;14&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;14&quot;</span>,s14)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;15&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;15&quot;</span>,s15)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;16&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;16&quot;</span>,s16)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;17&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;17&quot;</span>,s17)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;18&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;18&quot;</span>,s18)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;19&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;19&quot;</span>,s19)</span><br><span class="line">    <span class="keyword">elif</span> ss==<span class="string">&quot;20&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;20&quot;</span>,s20)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>下载：<a href="https://www.yuque.com/attachments/yuque/0/2022/py/29771975/1661770996584-394f3b9a-8515-4da1-9611-aaf356d73c98.py?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2022%2Fpy%2F29771975%2F1661770996584-394f3b9a-8515-4da1-9611-aaf356d73c98.py%22%2C%22name%22%3A%22%E5%AD%A6%E7%94%9F%E6%8A%A5%E5%88%B0%E7%AE%A1%E7%90%86.py%22%2C%22size%22%3A3294%2C%22type%22%3A%22text%2Fx-python%22%2C%22ext%22%3A%22py%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22mode%22%3A%22title%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u1135866c-9222-4c1e-8b01-199bfd8841f%22%2C%22taskType%22%3A%22upload%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ueff1e98c%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D">学生报到管理.py</a><br />温馨提示，本软件需要安装Python编译器，<a href="https://www.python.org/downloads/">点击下载</a>。如无法访问，请前往<a href="https://community-static.codemao.cn/download/python-3.6.5.exe">这里</a>下载。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>快速实现飞书客户端网页应用鉴权</title>
    <url>/posts/cde05bbf.html</url>
    <content><![CDATA[<h2 id="1-功能介绍"><a href="#1-功能介绍" class="headerlink" title="1. 功能介绍"></a>1. 功能介绍</h2><ul>
<li>【鉴权】如果您需要调用 开放平台客户端API（JSAPI），为了数据安全，飞书需要先验证网页应用有权限访问的JSAPI范围，此过程称为鉴权。</li>
<li>如果需要开发一款在飞书客户端内调用需要鉴权的 JSAPI 的网页应用，可以参考本示例。</li>
<li>本示例使用飞书客户端 jssdk，在鉴权完成后，调用了 getUserInfo-获取已登录用户的基本信息、showToast-弹出消息提示框 这2个JSAPI。</li>
</ul>
<h2 id="2-项目结构"><a href="#2-项目结构" class="headerlink" title="2. 项目结构"></a>2. 项目结构</h2><blockquote>
<p><strong>public和templates</strong>：前端模块，主要功能有：调取客户端API（JSAPI）获取用户信息、展示用户信息。</p>
<p><strong>其他</strong>：服务端模块，使用Flask构建，主要功能有：使用 App ID 和 App Secret 获取 tenant_access_token；使用 tenant_access_token 获取 jsapi_ticket；使用jsapi_ticket、随机字符串、当前时间戳、当前鉴权的网页URL 生成签名signature。</p>
</blockquote>
<p>以下为目录结构与部分核心代码文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── README.zh.md     ----- 说明文档</span><br><span class="line">├── public</span><br><span class="line">│   ├── svg     ----- 前端图形文件</span><br><span class="line">│   ├── index.css     ----- 前端展示样式</span><br><span class="line">│   ├── index.js     ----- 前端交互代码</span><br><span class="line">├── templates</span><br><span class="line">│   ├── index.html     ----- 前端用户信息展示页面</span><br><span class="line">├── auth.py     ----- 服务端获取jsapi_ticket等</span><br><span class="line">├── server.py     ----- 服务端核心业务代码</span><br><span class="line">├── requirements.txt     ----- 环境配置文件</span><br><span class="line">└── .env     ----- 全局默认配置文件，主要存储App ID和App Secret等</span><br></pre></td></tr></table></figure>
<h2 id="3-运行前置条件"><a href="#3-运行前置条件" class="headerlink" title="3. 运行前置条件"></a>3. 运行前置条件</h2><ul>
<li>安装配置了<a href="https://www.python.org/">Python 3</a>开发环境</li>
<li>安装配置了git工具</li>
</ul>
<h2 id="4-准备工作"><a href="#4-准备工作" class="headerlink" title="4. 准备工作"></a>4. 准备工作</h2><h3 id="4-1-创建企业自建应用"><a href="#4-1-创建企业自建应用" class="headerlink" title="4.1 创建企业自建应用"></a>4.1 创建企业自建应用</h3><p>在<a href="https://open.feishu.cn/app/">开发者后台</a> 点击<strong>创建企业自建应用</strong>，创建成功之后，点击应用名称打开应用，点击<strong>凭证与基础信息</strong>切换页面，拿到 App ID 和 App Secret 信息。<br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/c3469148013a3dbd.png" alt=""></p>
<h3 id="4-2-下载代码"><a href="#4-2-下载代码" class="headerlink" title="4.2 下载代码"></a>4.2 下载代码</h3><p>拉取最新代码到本地，并进入对应目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd web_app_with_jssdk/python</span><br></pre></td></tr></table></figure>
<h2 id="5-启动服务"><a href="#5-启动服务" class="headerlink" title="5. 启动服务"></a>5. 启动服务</h2><h3 id="5-1-修改环境变量"><a href="#5-1-修改环境变量" class="headerlink" title="5.1 修改环境变量"></a>5.1 修改环境变量</h3><p>修改<code>.env</code>文件中应用凭证数据为真实数据。</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">APP<span class="built_in">_</span>ID=cli<span class="built_in">_</span>9fxxxx00b</span><br><span class="line">APP<span class="built_in">_</span>SECRET=EX6xxxxOF</span><br></pre></td></tr></table></figure>
<p>以上两个参数可以在<a href="https://open.feishu.cn/app/">开发者后台</a> 点击<strong>凭证与基础信息查看</strong>。</p>
<p><strong>注意</strong> 私有化部署时要修改<code>.env</code>文件中 FEISHU_HOST 为私有化部署所用的域名。</p>
<h3 id="5-2-创建并激活虚拟环境"><a href="#5-2-创建并激活虚拟环境" class="headerlink" title="5.2 创建并激活虚拟环境"></a>5.2 创建并激活虚拟环境</h3><p>创建并激活一个新的虚拟环境</p>
<p><strong>mac/linux</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m venv venv</span><br><span class="line">. venv/bin/activate</span><br></pre></td></tr></table></figure>
<p><strong>windows</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m venv venv</span><br><span class="line">venv\Scripts\activate</span><br></pre></td></tr></table></figure>
<p>激活后，终端会显示虚拟环境的名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(venv) **** python %</span><br></pre></td></tr></table></figure>
<h3 id="5-3-安装依赖"><a href="#5-3-安装依赖" class="headerlink" title="5.3 安装依赖"></a>5.3 安装依赖</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>
<h3 id="5-4-启动项目并获取内网访问地址"><a href="#5-4-启动项目并获取内网访问地址" class="headerlink" title="5.4 启动项目并获取内网访问地址"></a>5.4 启动项目并获取内网访问地址</h3><p>运行服务端代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 server.py</span><br></pre></td></tr></table></figure>
<p>启动后会生成临时域名，如下图所示，仅在同一局域网内有效。<br /><img src="public/image1.png#id=Y6djg&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p>
<h2 id="6-启动后配置工作"><a href="#6-启动后配置工作" class="headerlink" title="6. 启动后配置工作"></a>6. 启动后配置工作</h2><h3 id="6-1-配置主页地址"><a href="#6-1-配置主页地址" class="headerlink" title="6.1 配置主页地址"></a>6.1 配置主页地址</h3><p>点击<strong>网页</strong>切换页面，打开<strong>启用网页</strong>按钮，修改<strong>网页配置</strong>，<strong>桌面端主页</strong>和<strong>移动端主页</strong>都填写为5.4中获取的临时内网访问地址，比如此例中为<code>http://10.0.147.21:3000</code> 。<br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/38fc1e5aede09941.png" alt="image1.png"></p>
<h3 id="6-2-配置H5可信域名"><a href="#6-2-配置H5可信域名" class="headerlink" title="6.2 配置H5可信域名"></a>6.2 配置H5可信域名</h3><p>为了飞书客户端内网页应用的安全可信，仅可信域名内的 H5 可以调用 JSAPI 获取数据，因此首先需要配置可信域名。打开开发者后台，点击左侧菜单【安全设置】，在<strong>H5可信域名</strong>中添加<strong>需要调用 JSAPI 接口的页面所在域名</strong>。</p>
<p>如此例中配置H5可信域名为5.4中获取的临时内网访问地址 <code>http://10.0.147.21:3000</code>。<br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/5e348189647566ad.png" alt="image2.png"></p>
<h3 id="6-3-应用版本创建与发布"><a href="#6-3-应用版本创建与发布" class="headerlink" title="6.3 应用版本创建与发布"></a>6.3 应用版本创建与发布</h3><p>打开开发者后台，点击左侧菜单：【应用发布】-【版本管理与发布】。点击创建版本，填写版本号、可用性状态等内容，点击保存，完成版本创建。</p>
<p>点击<strong>申请线上发布</strong>，完成应用发布。<br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/0ffa5d1216eeb7ee.png" alt=""><br /><strong>注意</strong>：仅可用性范围内用户能够打开应用。</p>
<h2 id="6-飞书客户端内体验网页应用"><a href="#6-飞书客户端内体验网页应用" class="headerlink" title="6. 飞书客户端内体验网页应用"></a>6. 飞书客户端内体验网页应用</h2><p><strong>注意</strong>： 进行调试时手机和电脑需要在同一个局域网内。</p>
<h3 id="桌面（PC）端"><a href="#桌面（PC）端" class="headerlink" title="桌面（PC）端"></a>桌面（PC）端</h3><p>桌面（PC）端可以通过 <strong>飞书</strong>&gt;<strong>工作台</strong>&gt; 搜索应用名称&gt; 打开应用 的方式体验Demo效果，如下图所示。<br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/8355bbc514d0025f.png" alt="image4.png"></p>
<h3 id="手机端"><a href="#手机端" class="headerlink" title="手机端"></a>手机端</h3><p>手机端通过 <strong>飞书</strong>&gt;<strong>工作台</strong>&gt; 搜索应用名称&gt; 打开应用 便可体验Demo，并进行本地调试。如正常运行，应当显示当前客户端内登录用户的姓名与头像，并弹出“鉴权成功”。<br /><img src="https://s3.uuu.ovh/imgs/2023/05/27/bccb757800a4713e.jpg" alt="image5.png"><br /><strong>补充</strong>: 手机端还可以通过扫描二维码（由5.4中获取的临时内网访问地址生成，可借助<a href="https://open.feishu.cn/document/uYjL24iN/ucDOzYjL3gzM24yN4MjN">飞书开发者工具</a>）体验并调试Demo</p>
]]></content>
      <tags>
        <tag>杂乱</tag>
      </tags>
  </entry>
  <entry>
    <title>学生信息管理系统</title>
    <url>/posts/36af3259.html</url>
    <content><![CDATA[<p>最近在学python，用了几天跟着网上的视频学完基础知识之后，做了一个学生管理系统，写的比较普通，没太大亮点，希望可以给初学者一些参考经验，另外，如有不恰当的地方还请各位指正。<br />学生管理系统主要包括录入学生信息、查找学生信息、删除学生信息、修改学生信息、排序学生信息、统计学生总数、显示学生信息，这几项功能。其中录入学生的信息包括学号、姓名、英语成绩、python成绩、数学成绩、总成绩；查询学生信息分为按学号和按姓名查找两种；删除学生信息是输入学号进行查找，查找到学生信息之后，对学生信息进行删除；修改学生信息是输入学号后，查询到学生信息之后，对学生信息进行修改；排序学生信息的排序方式可选择升序和降序，可选择按英语、python、数学成绩以及总成绩进行排序；统计学生总数 就是输出信息管理系统中有几个学生的信息。<br />首先，运行结果部分截图如下图所示：<br /><img src="https://s1.vika.cn/space/2023/01/23/6e3a4a2020d04a5baca5823a6486f3bf" alt="image.png"><br /><img src="https://s1.vika.cn/space/2023/01/23/76c8d3456e1a4d799ef1499db117f253" alt="image.png"><br /><img src="https://s1.vika.cn/space/2023/01/23/6e3a4a2020d04a5baca5823a6486f3bf" alt="image.png"></p>
<p>下面开始介绍代码，我把主要的代码处都给出了详细注释，如若有不懂的地方，请在评论区留言。<br />1、主界面函数代码部分，此函数主要就是使用print打印出主界面。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show_choose</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;==========================学生信息管理系统==========================&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-----------------------------功能菜单------------------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;                         1.录入学生信息&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;                         2.查找学生信息&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;                         3.删除学生信息&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;                         4.修改学生信息&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;                         5.排序学生信息&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;                         6.统计学生总数&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;                         7.显示学生信息&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;                         0.退出信息管理系统&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------&quot;</span>)</span><br></pre></td></tr></table></figure><br>2、录入学生信息函数代码部分，在这个函数中实现的功能是录入学生信息，包括学号、姓名、英语成绩、python成绩、数学成绩、总成绩等，并将其写入文件中，每一行为一个学生的信息存储。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 录入学生信息</span></span><br><span class="line"><span class="comment"># 录入学生的信息包括学号、姓名、英语成绩、python成绩、数学成绩、总成绩</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">input_info</span>():</span><br><span class="line">    infile_info = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)  <span class="comment"># 以追加的方式向文件中写入数据，如果文件不存在就创建一个文件</span></span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line">    <span class="comment"># 向文件中录入学生信息，每一个学生的信息单独占一行</span></span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        stu_id = <span class="built_in">input</span>(<span class="string">&quot;请输入学生学号（如2020001）：&quot;</span>)</span><br><span class="line">        stu_name = <span class="built_in">input</span>(<span class="string">&quot;请输入学生姓名：&quot;</span>)</span><br><span class="line">        stu_score_eng = <span class="built_in">input</span>(<span class="string">&quot;请输入学生英语成绩：&quot;</span>)</span><br><span class="line">        stu_score_py = <span class="built_in">input</span>(<span class="string">&quot;请输入学生Python成绩：&quot;</span>)</span><br><span class="line">        stu_score_math = <span class="built_in">input</span>(<span class="string">&quot;请输入学生数学成绩：&quot;</span>)</span><br><span class="line">        stu_sum_score = <span class="built_in">int</span>(stu_score_eng) + <span class="built_in">int</span>(stu_score_py) + <span class="built_in">int</span>(stu_score_math)</span><br><span class="line">        stu_info = stu_id + <span class="string">&#x27;\t&#x27;</span> + stu_name + <span class="string">&#x27;\t&#x27;</span> + stu_score_eng + <span class="string">&#x27;\t&#x27;</span> + stu_score_py + <span class="string">&#x27;\t&#x27;</span> + \</span><br><span class="line">                   stu_score_math + <span class="string">&#x27;\t&#x27;</span> + <span class="built_in">str</span>(stu_sum_score) + <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line">        infile_info.write(stu_info)</span><br><span class="line">        flag = <span class="built_in">input</span>(<span class="string">&quot;是否继续添加学生信息？y/n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;信息录入完毕！！！&quot;</span>)</span><br><span class="line">    infile_info.close()</span><br></pre></td></tr></table></figure><br>3、查询学生信息函数代码部分，此函数主要功能是查询时分为按学号和按姓名查询两种，若查无此人则输出提示信息。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除学生信息</span></span><br><span class="line"><span class="comment"># 输入学号进行查找，查找到学生信息之后，对学生信息进行删除</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">del_info</span>():</span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        n = <span class="number">0</span>  <span class="comment"># 用以查无此人时的标记</span></span><br><span class="line">        defile_info1 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)  <span class="comment"># 以可读方式打开文件</span></span><br><span class="line">        line_info = defile_info1.readlines()  <span class="comment"># 将文件的信息按行全部读取出来，此时line_info是一个列表，每一行是一个元素</span></span><br><span class="line">        defile_info2 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)  <span class="comment"># 以可写方式打开文件，用来将删除后的信息写入文件</span></span><br><span class="line">        del_id = <span class="built_in">input</span>(<span class="string">&quot;请输入要删除的学生的学号：&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> line_info:  <span class="comment"># 如果要删除的学生学号在文件存储的信息中，就将后面的信息向前移动覆盖这条信息</span></span><br><span class="line">            <span class="keyword">if</span> del_id <span class="keyword">in</span> line:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            defile_info2.write(line)</span><br><span class="line">            n = n + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="built_in">len</span>(line_info):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无此学生信息，请核对后再操作！！！&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;学号为&#123;0&#125;的学生信息已被删除！！！&quot;</span>.<span class="built_in">format</span>(del_id))</span><br><span class="line">        defile_info1.close()</span><br><span class="line">        defile_info2.close()</span><br><span class="line">        flag = <span class="built_in">input</span>(<span class="string">&quot;是否继续删除学习信息？y/n&quot;</span>)</span><br></pre></td></tr></table></figure><br>4、删除学生信息函数代码部分，此函数主要功能是执行删除操作，输入学号进行查找，查找到学生信息之后，对学生信息进行删除。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除学生信息</span></span><br><span class="line"><span class="comment"># 输入学号进行查找，查找到学生信息之后，对学生信息进行删除</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">del_info</span>():</span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        n = <span class="number">0</span>  <span class="comment"># 用以查无此人时的标记</span></span><br><span class="line">        defile_info1 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)  <span class="comment"># 以可读方式打开文件</span></span><br><span class="line">        line_info = defile_info1.readlines()  <span class="comment"># 将文件的信息按行全部读取出来，此时line_info是一个列表，每一行是一个元素</span></span><br><span class="line">        defile_info2 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)  <span class="comment"># 以可写方式打开文件，用来将删除后的信息写入文件</span></span><br><span class="line">        del_id = <span class="built_in">input</span>(<span class="string">&quot;请输入要删除的学生的学号：&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> line_info:  <span class="comment"># 如果要删除的学生学号在文件存储的信息中，就将后面的信息向前移动覆盖这条信息</span></span><br><span class="line">            <span class="keyword">if</span> del_id <span class="keyword">in</span> line:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            defile_info2.write(line)</span><br><span class="line">            n = n + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="built_in">len</span>(line_info):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无此学生信息，请核对后再操作！！！&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;学号为&#123;0&#125;的学生信息已被删除！！！&quot;</span>.<span class="built_in">format</span>(del_id))</span><br><span class="line">        defile_info1.close()</span><br><span class="line">        defile_info2.close()</span><br><span class="line">        flag = <span class="built_in">input</span>(<span class="string">&quot;是否继续删除学习信息？y/n&quot;</span>)</span><br></pre></td></tr></table></figure><br>5、修改学生信息函数代码部分，此函数的主要功能是对学生信息进行修改，当输入学号后，查询到学生信息之后，对学生信息进行修改。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mod_info</span>():</span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        n = <span class="number">0</span>  <span class="comment"># 用以查无此人时的标记</span></span><br><span class="line">        mod_id = <span class="built_in">input</span>(<span class="string">&quot;请输入要修改的学生学号：&quot;</span>)</span><br><span class="line">        modfile_file1 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)  <span class="comment"># 以可读方式打开文件，读取到line_info中，每一行就是一个列表的元素</span></span><br><span class="line">        line_info = modfile_file1.readlines()</span><br><span class="line">        modfile_file2 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)  <span class="comment"># 用以写入修改后的数据</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> line_info:  <span class="comment"># 遍历列表</span></span><br><span class="line">            <span class="keyword">if</span> mod_id <span class="keyword">in</span> line:  <span class="comment"># 如果修改的学生信息存在，就重新写入学生信息</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;已找到学生，请修改信息！&quot;</span>)</span><br><span class="line">                mod_name = <span class="built_in">input</span>(<span class="string">&quot;请输入姓名：&quot;</span>)</span><br><span class="line">                mod_score_eng = <span class="built_in">input</span>(<span class="string">&quot;请输入英语成绩：&quot;</span>)</span><br><span class="line">                mod_score_py = <span class="built_in">input</span>(<span class="string">&quot;请输入python成绩：&quot;</span>)</span><br><span class="line">                mod_score_math = <span class="built_in">input</span>(<span class="string">&quot;请输入数学成绩：&quot;</span>)</span><br><span class="line">                mod_sum_score = <span class="built_in">int</span>(mod_score_eng) + <span class="built_in">int</span>(mod_score_py) + <span class="built_in">int</span>(mod_score_math)</span><br><span class="line">                mod_stu_info = mod_id + <span class="string">&#x27;\t&#x27;</span> + mod_name + <span class="string">&#x27;\t&#x27;</span> + mod_score_eng + <span class="string">&#x27;\t&#x27;</span> + mod_score_py + <span class="string">&#x27;\t&#x27;</span> + \</span><br><span class="line">                               mod_score_math + <span class="string">&#x27;\t&#x27;</span> + <span class="built_in">str</span>(mod_sum_score) + <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line">                modfile_file2.write(mod_stu_info)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;修改成功！！！&quot;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            modfile_file2.write(line)  <span class="comment"># 由于w方式打开的文件重新后会覆盖原有数据，所以需要将原有数据写入</span></span><br><span class="line">            n = n + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="built_in">len</span>(line_info):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无此学生信息，请核对后再操作！！！&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;学号为&#123;0&#125;的学生信息已修改！！！&quot;</span>.<span class="built_in">format</span>(mod_id))</span><br><span class="line">        modfile_file1.close()</span><br><span class="line">        modfile_file2.close()</span><br><span class="line">        flag = <span class="built_in">input</span>(<span class="string">&quot;是否继续修改学习信息？y/n&quot;</span>)</span><br></pre></td></tr></table></figure><br>6、排序学生信息函数部分，此函数功能是对学生信息进行排序，排序方式可选择升序和降序，排序条件可选择按英语、python、数学成绩以及总成绩进行排序。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 排序学生信息</span></span><br><span class="line"><span class="comment"># 排序方式可选择升序和降序</span></span><br><span class="line"><span class="comment"># 可选择按英语、python、数学成绩以及总成绩进行排序</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sort_info</span>():</span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 此方法用来排序，返回列表的2，3，4，5的元素，也就是分别依据英语、python、数学、总成绩进行排序</span></span><br><span class="line">    <span class="comment"># 例如列表[[&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;],[&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;],[&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;]]</span></span><br><span class="line">    <span class="comment"># 则take_eng就是以每个列表的第三个元素为依据排序，也就是3，2，1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">take_eng</span>(<span class="params">elem</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(elem[<span class="number">2</span>])</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">take_py</span>(<span class="params">elem</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(elem[<span class="number">3</span>])</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">take_math</span>(<span class="params">elem</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(elem[<span class="number">4</span>])</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">take_sum</span>(<span class="params">elem</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(elem[<span class="number">5</span>])</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 此方法用来进行排序后的输出操作</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">output_sort</span>(<span class="params">sort_list</span>):</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> sort_list:</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> m:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;%+10s&quot;</span> % n, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        sortfile_info = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)  <span class="comment"># 可读方式打开文件，并读取信息line_info中</span></span><br><span class="line">        line_info = sortfile_info.readlines()</span><br><span class="line">        <span class="comment"># 定义列表，用来将读取出来的字符串信息，转化为列表</span></span><br><span class="line">        <span class="comment"># 例如[&#x27;2020001\t李一一\t75\t86\t89\t250</span></span><br><span class="line"><span class="string">&#x27;, &#x27;</span><span class="number">2020002</span>\t王大伟\t85\t96\t99\t280</span><br><span class="line"><span class="string">&#x27;]</span></span><br><span class="line"><span class="string">        # 转化为[[&#x27;</span><span class="number">2020001</span><span class="string">&#x27;, &#x27;</span>李一一<span class="string">&#x27;, &#x27;</span><span class="number">75</span><span class="string">&#x27;, &#x27;</span><span class="number">86</span><span class="string">&#x27;, &#x27;</span><span class="number">89</span><span class="string">&#x27;, &#x27;</span><span class="number">250</span><span class="string">&#x27;], [&#x27;</span><span class="number">2020002</span><span class="string">&#x27;, &#x27;</span>王大伟<span class="string">&#x27;, &#x27;</span><span class="number">85</span><span class="string">&#x27;, &#x27;</span><span class="number">96</span><span class="string">&#x27;, &#x27;</span><span class="number">99</span><span class="string">&#x27;, &#x27;</span><span class="number">280</span><span class="string">&#x27;]]</span></span><br><span class="line"><span class="string">        lst = []</span></span><br><span class="line"><span class="string">        for i in range(0, len(line_info)):</span></span><br><span class="line"><span class="string">            lst.append(&#x27;</span>lst<span class="string">&#x27; + str(i))</span></span><br><span class="line"><span class="string">        i = 0</span></span><br><span class="line"><span class="string">        for line in line_info:  # 遍历列表，将信息转化为单独的列表，并去掉\t和</span></span><br><span class="line"><span class="string">，方便接下来的排序比较</span></span><br><span class="line"><span class="string">            line = line.replace(&#x27;</span></span><br><span class="line"><span class="string">&#x27;, &#x27;</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">            lst[i] = line.split(&#x27;</span>\t<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">            i = i + 1</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">        sort_up_down = input(&quot;请选择（0升序，1降序）：&quot;)</span></span><br><span class="line"><span class="string">        print(&quot;1.按英语成绩排序，2.按python成绩排序&quot;)</span></span><br><span class="line"><span class="string">        print(&quot;3.按数学成绩排序，4.按学生总成绩排序&quot;)</span></span><br><span class="line"><span class="string">        sort_term = input(&quot;请选择：&quot;)</span></span><br><span class="line"><span class="string">        if sort_up_down == &#x27;</span><span class="number">0</span><span class="string">&#x27;:  # 升序</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">1</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_eng, reverse=False)  # 以英语成绩升序排序</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">2</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_py, reverse=False)</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">3</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_math, reverse=False)</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">4</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_sum, reverse=False)</span></span><br><span class="line"><span class="string">            output_sort(lst)</span></span><br><span class="line"><span class="string">        if sort_up_down == &#x27;</span><span class="number">1</span><span class="string">&#x27;:  # 降序</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">1</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_eng, reverse=True)  # 以英语成绩降序排序</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">2</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_py, reverse=True)</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">3</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_math, reverse=True)</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">4</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_sum, reverse=True)</span></span><br><span class="line"><span class="string">            output_sort(lst)</span></span><br><span class="line"><span class="string">        flag = input(&quot;是否继续排序信息？y/n&quot;)</span></span><br></pre></td></tr></table></figure><br>7、统计学生总数函数代码部分，此函数主要是输出信息管理系统中有几个学生的信息。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 统计学生总数</span></span><br><span class="line"><span class="comment"># 输出信息管理系统中有几个学生的信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sum_info</span>():</span><br><span class="line">    sumfile_info = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    line_info = sumfile_info.readlines()</span><br><span class="line">    sum_stu = <span class="built_in">len</span>(line_info)  <span class="comment"># 写出列表中的元素个数</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;一共有&#123;0&#125;名学生。&quot;</span>.<span class="built_in">format</span>(sum_stu))</span><br><span class="line">    sumfile_info.close()</span><br></pre></td></tr></table></figure><br>8、显示学生信息函数代码部分，此函数是将文件存储的学生信息全部显示出来。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示学生信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_info</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;学号&quot;</span>, end=<span class="string">&#x27;\t\t&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;姓名&quot;</span>, end=<span class="string">&#x27;\t\t&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;英语成绩&quot;</span>, end=<span class="string">&#x27;\t\t&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Python成绩&quot;</span>, end=<span class="string">&#x27;\t\t&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;数学成绩&quot;</span>, end=<span class="string">&#x27;\t\t&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;总成绩&quot;</span>, end=<span class="string">&#x27;\t\t&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line">    showfile_info = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    line_info = showfile_info.readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> line_info:  <span class="comment"># 遍历列表，输出各个元素</span></span><br><span class="line">        <span class="built_in">print</span>(line)</span><br><span class="line">    showfile_info.close()</span><br></pre></td></tr></table></figure><br>以上就是每个功能函数的代码，完成这些函数的编写之后，需要进行调用才能够执行，所以主函数代码如下。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    show_choose()</span><br><span class="line">    choose_menu = <span class="built_in">input</span>(<span class="string">&quot;请选择：&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> choose_menu != <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> choose_menu == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            input_info()</span><br><span class="line">        <span class="keyword">if</span> choose_menu == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            find_info()</span><br><span class="line">        <span class="keyword">if</span> choose_menu == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            del_info()</span><br><span class="line">        <span class="keyword">if</span> choose_menu == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            mod_info()</span><br><span class="line">        <span class="keyword">if</span> choose_menu == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">            sort_info()</span><br><span class="line">        <span class="keyword">if</span> choose_menu == <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">            sum_info()</span><br><span class="line">        <span class="keyword">if</span> choose_menu == <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">            show_info()</span><br><span class="line">        choose_menu = <span class="built_in">input</span>(<span class="string">&quot;请选择：&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;欢迎您再次使用！！！&quot;</span>)</span><br></pre></td></tr></table></figure><br>最后，需要在程序末尾执行main()，完成后运行函数，就可以正常执行了。<br />下面是全部的代码，一共250行，不算简洁，也不是太冗余，复制后直接可用，如有瑕疵和bug请指正，谢谢。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开发者：haloged</span></span><br><span class="line"><span class="comment"># 开发日期：2022/11/24 19:02</span></span><br><span class="line"><span class="comment"># 学生管理系统，包括录入学生信息、查找学生信息、删除学生信息、修改学生信息、排序学生信息、统计学生总数、显示学生信息。</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 录入学生信息</span></span><br><span class="line"><span class="comment"># 录入学生的信息包括学号、姓名、英语成绩、python成绩、数学成绩、总成绩</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">input_info</span>():</span><br><span class="line">    infile_info = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)  <span class="comment"># 以追加的方式向文件中写入数据，如果文件不存在就创建一个文件</span></span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line">    <span class="comment"># 向文件中录入学生信息，每一个学生的信息单独占一行</span></span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        stu_id = <span class="built_in">input</span>(<span class="string">&quot;请输入学生学号（如2020001）：&quot;</span>)</span><br><span class="line">        stu_name = <span class="built_in">input</span>(<span class="string">&quot;请输入学生姓名：&quot;</span>)</span><br><span class="line">        stu_score_eng = <span class="built_in">input</span>(<span class="string">&quot;请输入学生英语成绩：&quot;</span>)</span><br><span class="line">        stu_score_py = <span class="built_in">input</span>(<span class="string">&quot;请输入学生Python成绩：&quot;</span>)</span><br><span class="line">        stu_score_math = <span class="built_in">input</span>(<span class="string">&quot;请输入学生数学成绩：&quot;</span>)</span><br><span class="line">        stu_sum_score = <span class="built_in">int</span>(stu_score_eng) + <span class="built_in">int</span>(stu_score_py) + <span class="built_in">int</span>(stu_score_math)</span><br><span class="line">        stu_info = stu_id + <span class="string">&#x27;\t&#x27;</span> + stu_name + <span class="string">&#x27;\t&#x27;</span> + stu_score_eng + <span class="string">&#x27;\t&#x27;</span> + stu_score_py + <span class="string">&#x27;\t&#x27;</span> + \</span><br><span class="line">                   stu_score_math + <span class="string">&#x27;\t&#x27;</span> + <span class="built_in">str</span>(stu_sum_score) + <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line">        infile_info.write(stu_info)</span><br><span class="line">        flag = <span class="built_in">input</span>(<span class="string">&quot;是否继续添加学生信息？y/n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;信息录入完毕！！！&quot;</span>)</span><br><span class="line">    infile_info.close()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查询学生信息</span></span><br><span class="line"><span class="comment"># 查询时分为按学号和按姓名查找两种</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_info</span>():</span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        n = <span class="number">0</span></span><br><span class="line">        m = <span class="number">0</span>  <span class="comment"># 定义m，n是为了用作判断文件中是否有此人信息的标记</span></span><br><span class="line">        findfile_info = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)  <span class="comment"># 以可读方式打开文件</span></span><br><span class="line">        line_info = findfile_info.readlines()</span><br><span class="line">        find_nid = <span class="built_in">input</span>(<span class="string">&quot;按学号查找请输入1，按姓名查找请输入2：&quot;</span>)  <span class="comment"># 查询方式分为按学号和按姓名</span></span><br><span class="line">        <span class="keyword">if</span> find_nid == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            find_id = <span class="built_in">input</span>(<span class="string">&#x27;请输入学生学号：&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> line_info:</span><br><span class="line">                <span class="keyword">if</span> find_id <span class="keyword">in</span> line:</span><br><span class="line">                    <span class="built_in">print</span>(line)</span><br><span class="line">                    n = n + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;没有查询到学生信息，无数据显示！！！&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> find_nid == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            find_name = <span class="built_in">input</span>(<span class="string">&#x27;请输入学生姓名：&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> line_info:</span><br><span class="line">                <span class="keyword">if</span> find_name <span class="keyword">in</span> line:</span><br><span class="line">                    <span class="built_in">print</span>(line)</span><br><span class="line">                    m = m + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> m == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;没有查询到学生信息，无数据显示！！！&quot;</span>)</span><br><span class="line">        findfile_info.close()</span><br><span class="line">        flag = <span class="built_in">input</span>(<span class="string">&quot;是否继续查询学生信息？y/n&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除学生信息</span></span><br><span class="line"><span class="comment"># 输入学号进行查找，查找到学生信息之后，对学生信息进行删除</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">del_info</span>():</span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        n = <span class="number">0</span>  <span class="comment"># 用以查无此人时的标记</span></span><br><span class="line">        defile_info1 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)  <span class="comment"># 以可读方式打开文件</span></span><br><span class="line">        line_info = defile_info1.readlines()  <span class="comment"># 将文件的信息按行全部读取出来，此时line_info是一个列表，每一行是一个元素</span></span><br><span class="line">        defile_info2 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)  <span class="comment"># 以可写方式打开文件，用来将删除后的信息写入文件</span></span><br><span class="line">        del_id = <span class="built_in">input</span>(<span class="string">&quot;请输入要删除的学生的学号：&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> line_info:  <span class="comment"># 如果要删除的学生学号在文件存储的信息中，就将后面的信息向前移动覆盖这条信息</span></span><br><span class="line">            <span class="keyword">if</span> del_id <span class="keyword">in</span> line:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            defile_info2.write(line)</span><br><span class="line">            n = n + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="built_in">len</span>(line_info):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无此学生信息，请核对后再操作！！！&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;学号为&#123;0&#125;的学生信息已被删除！！！&quot;</span>.<span class="built_in">format</span>(del_id))</span><br><span class="line">        defile_info1.close()</span><br><span class="line">        defile_info2.close()</span><br><span class="line">        flag = <span class="built_in">input</span>(<span class="string">&quot;是否继续删除学习信息？y/n&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 修改学生信息</span></span><br><span class="line"><span class="comment"># 输入学号后，查询到学生信息之后，对学生信息进行修改</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mod_info</span>():</span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        n = <span class="number">0</span>  <span class="comment"># 用以查无此人时的标记</span></span><br><span class="line">        mod_id = <span class="built_in">input</span>(<span class="string">&quot;请输入要修改的学生学号：&quot;</span>)</span><br><span class="line">        modfile_file1 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)  <span class="comment"># 以可读方式打开文件，读取到line_info中，每一行就是一个列表的元素</span></span><br><span class="line">        line_info = modfile_file1.readlines()</span><br><span class="line">        modfile_file2 = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)  <span class="comment"># 用以写入修改后的数据</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> line_info:  <span class="comment"># 遍历列表</span></span><br><span class="line">            <span class="keyword">if</span> mod_id <span class="keyword">in</span> line:  <span class="comment"># 如果修改的学生信息存在，就重新写入学生信息</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;已找到学生，请修改信息！&quot;</span>)</span><br><span class="line">                mod_name = <span class="built_in">input</span>(<span class="string">&quot;请输入姓名：&quot;</span>)</span><br><span class="line">                mod_score_eng = <span class="built_in">input</span>(<span class="string">&quot;请输入英语成绩：&quot;</span>)</span><br><span class="line">                mod_score_py = <span class="built_in">input</span>(<span class="string">&quot;请输入python成绩：&quot;</span>)</span><br><span class="line">                mod_score_math = <span class="built_in">input</span>(<span class="string">&quot;请输入数学成绩：&quot;</span>)</span><br><span class="line">                mod_sum_score = <span class="built_in">int</span>(mod_score_eng) + <span class="built_in">int</span>(mod_score_py) + <span class="built_in">int</span>(mod_score_math)</span><br><span class="line">                mod_stu_info = mod_id + <span class="string">&#x27;\t&#x27;</span> + mod_name + <span class="string">&#x27;\t&#x27;</span> + mod_score_eng + <span class="string">&#x27;\t&#x27;</span> + mod_score_py + <span class="string">&#x27;\t&#x27;</span> + \</span><br><span class="line">                               mod_score_math + <span class="string">&#x27;\t&#x27;</span> + <span class="built_in">str</span>(mod_sum_score) + <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line">                modfile_file2.write(mod_stu_info)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;修改成功！！！&quot;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            modfile_file2.write(line)  <span class="comment"># 由于w方式打开的文件重新后会覆盖原有数据，所以需要将原有数据写入</span></span><br><span class="line">            n = n + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="built_in">len</span>(line_info):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无此学生信息，请核对后再操作！！！&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;学号为&#123;0&#125;的学生信息已修改！！！&quot;</span>.<span class="built_in">format</span>(mod_id))</span><br><span class="line">        modfile_file1.close()</span><br><span class="line">        modfile_file2.close()</span><br><span class="line">        flag = <span class="built_in">input</span>(<span class="string">&quot;是否继续修改学习信息？y/n&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 排序学生信息</span></span><br><span class="line"><span class="comment"># 排序方式可选择升序和降序</span></span><br><span class="line"><span class="comment"># 可选择按英语、python、数学成绩以及总成绩进行排序</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sort_info</span>():</span><br><span class="line">    flag = <span class="string">&#x27;y&#x27;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 此方法用来排序，返回列表的2，3，4，5的元素，也就是分别依据英语、python、数学、总成绩进行排序</span></span><br><span class="line">    <span class="comment"># 例如列表[[&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;],[&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;],[&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;]]</span></span><br><span class="line">    <span class="comment"># 则take_eng就是以每个列表的第三个元素为依据排序，也就是3，2，1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">take_eng</span>(<span class="params">elem</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(elem[<span class="number">2</span>])</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">take_py</span>(<span class="params">elem</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(elem[<span class="number">3</span>])</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">take_math</span>(<span class="params">elem</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(elem[<span class="number">4</span>])</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">take_sum</span>(<span class="params">elem</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(elem[<span class="number">5</span>])</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 此方法用来进行排序后的输出操作</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">output_sort</span>(<span class="params">sort_list</span>):</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> sort_list:</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> m:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;%+10s&quot;</span> % n, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> flag == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> flag == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">        sortfile_info = <span class="built_in">open</span>(<span class="string">&#x27;infile.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)  <span class="comment"># 可读方式打开文件，并读取信息line_info中</span></span><br><span class="line">        line_info = sortfile_info.readlines()</span><br><span class="line">        <span class="comment"># 定义列表，用来将读取出来的字符串信息，转化为列表</span></span><br><span class="line">        <span class="comment"># 例如[&#x27;2020001\t李一一\t75\t86\t89\t250</span></span><br><span class="line"><span class="string">&#x27;, &#x27;</span><span class="number">2020002</span>\t王大伟\t85\t96\t99\t280</span><br><span class="line"><span class="string">&#x27;]</span></span><br><span class="line"><span class="string">        # 转化为[[&#x27;</span><span class="number">2020001</span><span class="string">&#x27;, &#x27;</span>李一一<span class="string">&#x27;, &#x27;</span><span class="number">75</span><span class="string">&#x27;, &#x27;</span><span class="number">86</span><span class="string">&#x27;, &#x27;</span><span class="number">89</span><span class="string">&#x27;, &#x27;</span><span class="number">250</span><span class="string">&#x27;], [&#x27;</span><span class="number">2020002</span><span class="string">&#x27;, &#x27;</span>王大伟<span class="string">&#x27;, &#x27;</span><span class="number">85</span><span class="string">&#x27;, &#x27;</span><span class="number">96</span><span class="string">&#x27;, &#x27;</span><span class="number">99</span><span class="string">&#x27;, &#x27;</span><span class="number">280</span><span class="string">&#x27;]]</span></span><br><span class="line"><span class="string">        lst = []</span></span><br><span class="line"><span class="string">        for i in range(0, len(line_info)):</span></span><br><span class="line"><span class="string">            lst.append(&#x27;</span>lst<span class="string">&#x27; + str(i))</span></span><br><span class="line"><span class="string">        i = 0</span></span><br><span class="line"><span class="string">        for line in line_info:  # 遍历列表，将信息转化为单独的列表，并去掉\t和</span></span><br><span class="line"><span class="string">，方便接下来的排序比较</span></span><br><span class="line"><span class="string">            line = line.replace(&#x27;</span></span><br><span class="line"><span class="string">&#x27;, &#x27;</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">            lst[i] = line.split(&#x27;</span>\t<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">            i = i + 1</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">        sort_up_down = input(&quot;请选择（0升序，1降序）：&quot;)</span></span><br><span class="line"><span class="string">        print(&quot;1.按英语成绩排序，2.按python成绩排序&quot;)</span></span><br><span class="line"><span class="string">        print(&quot;3.按数学成绩排序，4.按学生总成绩排序&quot;)</span></span><br><span class="line"><span class="string">        sort_term = input(&quot;请选择：&quot;)</span></span><br><span class="line"><span class="string">        if sort_up_down == &#x27;</span><span class="number">0</span><span class="string">&#x27;:  # 升序</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">1</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_eng, reverse=False)  # 以英语成绩升序排序</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">2</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_py, reverse=False)</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">3</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_math, reverse=False)</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">4</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_sum, reverse=False)</span></span><br><span class="line"><span class="string">            output_sort(lst)</span></span><br><span class="line"><span class="string">        if sort_up_down == &#x27;</span><span class="number">1</span><span class="string">&#x27;:  # 降序</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">1</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_eng, reverse=True)  # 以英语成绩降序排序</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">2</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_py, reverse=True)</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">3</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_math, reverse=True)</span></span><br><span class="line"><span class="string">            if sort_term == &#x27;</span><span class="number">4</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                lst.sort(key=take_sum, reverse=True)</span></span><br><span class="line"><span class="string">            output_sort(lst)</span></span><br><span class="line"><span class="string">        flag = input(&quot;是否继续排序信息？y/n&quot;)</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"># 统计学生总数</span></span><br><span class="line"><span class="string"># 输出信息管理系统中有几个学生的信息</span></span><br><span class="line"><span class="string">def sum_info():</span></span><br><span class="line"><span class="string">    sumfile_info = open(&#x27;</span>infile.txt<span class="string">&#x27;, &#x27;</span><span class="string">r&#x27;)</span></span><br><span class="line"><span class="string">    line_info = sumfile_info.readlines()</span></span><br><span class="line"><span class="string">    sum_stu = len(line_info)  # 写出列表中的元素个数</span></span><br><span class="line"><span class="string">    print(&quot;一共有&#123;0&#125;名学生。&quot;.format(sum_stu))</span></span><br><span class="line"><span class="string">    sumfile_info.close()</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"># 显示学生信息</span></span><br><span class="line"><span class="string">def show_info():</span></span><br><span class="line"><span class="string">    print(&quot;学号&quot;, end=&#x27;</span>\t\t<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    print(&quot;姓名&quot;, end=&#x27;</span>\t\t<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    print(&quot;英语成绩&quot;, end=&#x27;</span>\t\t<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    print(&quot;Python成绩&quot;, end=&#x27;</span>\t\t<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    print(&quot;数学成绩&quot;, end=&#x27;</span>\t\t<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    print(&quot;总成绩&quot;, end=&#x27;</span>\t\t<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    print(&#x27;</span></span><br><span class="line"><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    showfile_info = open(&#x27;</span>infile.txt<span class="string">&#x27;, &#x27;</span><span class="string">r&#x27;)</span></span><br><span class="line"><span class="string">    line_info = showfile_info.readlines()</span></span><br><span class="line"><span class="string">    for line in line_info:  # 遍历列表，输出各个元素</span></span><br><span class="line"><span class="string">        print(line)</span></span><br><span class="line"><span class="string">    showfile_info.close()</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">def show_choose():</span></span><br><span class="line"><span class="string">    print(&quot;==========================学生信息管理系统==========================&quot;)</span></span><br><span class="line"><span class="string">    print()</span></span><br><span class="line"><span class="string">    print(&quot;-----------------------------功能菜单------------------------------&quot;)</span></span><br><span class="line"><span class="string">    print()</span></span><br><span class="line"><span class="string">    print(&quot;                         1.录入学生信息&quot;)</span></span><br><span class="line"><span class="string">    print(&quot;                         2.查找学生信息&quot;)</span></span><br><span class="line"><span class="string">    print(&quot;                         3.删除学生信息&quot;)</span></span><br><span class="line"><span class="string">    print(&quot;                         4.修改学生信息&quot;)</span></span><br><span class="line"><span class="string">    print(&quot;                         5.排序学生信息&quot;)</span></span><br><span class="line"><span class="string">    print(&quot;                         6.统计学生总数&quot;)</span></span><br><span class="line"><span class="string">    print(&quot;                         7.显示学生信息&quot;)</span></span><br><span class="line"><span class="string">    print(&quot;                         0.退出信息管理系统&quot;)</span></span><br><span class="line"><span class="string">    print()</span></span><br><span class="line"><span class="string">    print(&quot;------------------------------------------------------------------&quot;)</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">def main():</span></span><br><span class="line"><span class="string">    show_choose()</span></span><br><span class="line"><span class="string">    choose_menu = input(&quot;请选择：&quot;)</span></span><br><span class="line"><span class="string">    while choose_menu != &#x27;</span><span class="number">0</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">        if choose_menu == &#x27;</span><span class="number">1</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">            input_info()</span></span><br><span class="line"><span class="string">        if choose_menu == &#x27;</span><span class="number">2</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">            find_info()</span></span><br><span class="line"><span class="string">        if choose_menu == &#x27;</span><span class="number">3</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">            del_info()</span></span><br><span class="line"><span class="string">        if choose_menu == &#x27;</span><span class="number">4</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">            mod_info()</span></span><br><span class="line"><span class="string">        if choose_menu == &#x27;</span><span class="number">5</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">            sort_info()</span></span><br><span class="line"><span class="string">        if choose_menu == &#x27;</span><span class="number">6</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">            sum_info()</span></span><br><span class="line"><span class="string">        if choose_menu == &#x27;</span><span class="number">7</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">            show_info()</span></span><br><span class="line"><span class="string">        choose_menu = input(&quot;请选择：&quot;)</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    print(&quot;欢迎您再次使用！！！&quot;)</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">main()</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>提交信息规范</title>
    <url>/posts/f190a193.html</url>
    <content><![CDATA[<h2 id="提交类型"><a href="#提交类型" class="headerlink" title="提交类型"></a><a href="https://waddle.coco-central.cn/docs/#/dev/3-%E6%8F%90%E4%BA%A4%E4%BF%A1%E6%81%AF%E8%A7%84%E8%8C%83?id=%e6%8f%90%e4%ba%a4%e7%b1%bb%e5%9e%8b">提交类型</a></h2><ul>
<li>[feat]新增功能</li>
<li>[fix]修复Bug</li>
<li>[test]增加用于测试的内容</li>
<li>[style]优化代码样式</li>
<li>[perf]优化性能、体验、算法等内容</li>
<li>[revert]回滚到上一个版本</li>
<li><a href="pr编号">merge</a>代码合并（PR合并）</li>
<li>[format]格式化文档</li>
<li><p>[version]修改版本号</p>
<h2 id="提交信息格式"><a href="#提交信息格式" class="headerlink" title="提交信息格式"></a><a href="https://waddle.coco-central.cn/docs/#/dev/3-%E6%8F%90%E4%BA%A4%E4%BF%A1%E6%81%AF%E8%A7%84%E8%8C%83?id=%e6%8f%90%e4%ba%a4%e4%bf%a1%e6%81%af%e6%a0%bc%e5%bc%8f">提交信息格式</a></h2><p>请各位贡献者按照[提交类型]具体描述修改内容这一格式进行提交，例如：</p>
</li>
<li><p>[docs]修改文档格式问题</p>
</li>
<li>[perf]优化右下角放大按钮展示形式</li>
<li>[feat]新增代码复制按钮</li>
<li><a href="!39">merge</a>在海量的blockly源码里，捞到了zoom控制器</li>
</ul>
<h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><blockquote>
<p><a href="https://waddle.coco-central.cn/docs/#/dev/3-%E6%8F%90%E4%BA%A4%E4%BF%A1%E6%81%AF%E8%A7%84%E8%8C%83">https://waddle.coco-central.cn/docs/#/dev/3-%E6%8F%90%E4%BA%A4%E4%BF%A1%E6%81%AF%E8%A7%84%E8%8C%83</a></p>
</blockquote>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>编程小知识</tag>
      </tags>
  </entry>
  <entry>
    <title>系统下载器</title>
    <url>/posts/e655e845.html</url>
    <content><![CDATA[<p>你还在为下载不到纯净的系统而感到烦恼吗？系统下载器能帮你解决一切问题。<br /><img src="https://s1.vika.cn/space/2023/01/23/a09dcbfff31c42f1b88aa45fb2b5e7c2" alt="网页捕获_4-11-2022_233247_coco.codemao.cn.jpeg"><br />在线体验链接：<a href="https://coco.codemao.cn/editor/player/163559184?channel=h5">https://coco.codemao.cn/editor/player/163559184?channel=h5</a><br />下载链接：<a href="https://creation.codemao.cn/434/BE426F91F4264FE2854814F5BED95293/https://creation.codemao.cn/434/BE426F91F4264FE2854814F5BED95293/系统下载器.apk">https://creation.codemao.cn/434/BE426F91F4264FE2854814F5BED95293/系统下载器.apk</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Codemao</tag>
      </tags>
  </entry>
  <entry>
    <title>终于可以在线写文章了！！！</title>
    <url>/posts/a72cf7a1.html</url>
    <content><![CDATA[<p>最近装了折腾了一下Hexo在线写文章，有两种方法，但是我用第一种有点问题，挺曲折的，所以写篇文章纪念一下</p>
<h2 id="hexo-admin"><a href="#hexo-admin" class="headerlink" title="hexo admin"></a>hexo admin</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol>
<li>安装了Node.JS电脑</li>
<li>Hexo（3.0.0以上）</li>
<li>hexo-admin</li>
</ol>
<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><p>安装hexo-admin只需要一条命令<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-admin --save</span><br></pre></td></tr></table></figure><br>当然如果你有配置淘宝的数据源可以使用下面的命令，安装时网络会稍微稳定一些，插件不大，感觉也差不多。<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-admin --save</span><br></pre></td></tr></table></figure><br>可能在安装时还会出现一些缺少依赖的问题，我这里没有遇到，直接安装就运行成功了。所以在安装上要是还遇到什么其他问题的就只能你自己度娘了，也可以截图留言给我，看到都会回复的。<br><img src="https://f.pz.al/pzal/2023/05/14/572cc877a6a4b.png" alt="img_1"></p>
<h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><h4 id="2-1-普通使用"><a href="#2-1-普通使用" class="headerlink" title="2.1 普通使用"></a>2.1 普通使用</h4><p>输入<code>hexo</code>运行hexo，打开浏览器输入”<a href="http://localhost:4000/admin">http://localhost:4000/admin</a>“ 现在就可以正常使用了。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:4000/admin</span><br></pre></td></tr></table></figure><br><img src="https://f.pz.al/pzal/2023/05/14/2d346c8169526.png" alt="img_2"></p>
<h4 id="2-2-安全设置"><a href="#2-2-安全设置" class="headerlink" title="2.2 安全设置"></a>2.2 安全设置</h4><p>在hexo的<code>_config.yml</code>文件中还可以配置一些hexo-admin插件的参数，用于保证安全的。如果是部署到GitHub pages上的话就没必要设置这个，因为GitHub只支持静态，而且hexo-admin的管理界面并不会一起被部署上去。<br>1.在hexo的<code>_config.yml</code>文件中添加以下参数<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">admin:</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">用户名</span></span><br><span class="line">  <span class="attr">password_hash:</span> <span class="string">md5密码</span></span><br><span class="line">  <span class="attr">secret:</span>  <span class="string">用于加密cookie的密码</span></span><br></pre></td></tr></table></figure><br><code>_config.yml</code>的参数可以使用hexo-admin自动生成，打开hexo-admin界面，点击导航的“settings”选项，输入内容。<br><img src="https://f.pz.al/pzal/2023/05/14/c1a8e3e7123ca.png" alt="img_3"><br>输入内容后下滑，找到生成的代码，复制到<code>_config.yml</code>中重启hexo，打来hexo-admin的界面。<br><img src="https://f.pz.al/pzal/2023/05/14/4cec92933c8e6.png" alt="img_4"><br><strong>注意：</strong><br>这里要注意的是<code>secret</code>一定一定不能太过于简单，我设置“123456”报错了，后来我再乱输了一堆字母，成功。<br><img src="https://f.pz.al/pzal/2023/05/14/2af4ef9b0f0fc.png" alt="img_5"></p>
<h4 id="2-3-hexo-admin新建文章设置参数"><a href="#2-3-hexo-admin新建文章设置参数" class="headerlink" title="2.3 hexo-admin新建文章设置参数"></a>2.3 hexo-admin新建文章设置参数</h4><p>在hexo-admin新建文章可以设置一些文章参数，文章参数配置如下，参数默认值可以为空：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-admin默认文章参数</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="string">参数名1:</span> <span class="string">参数默认值2</span></span><br><span class="line">  <span class="string">参数名2:</span> <span class="string">参数默认值2</span></span><br></pre></td></tr></table></figure><br>示例：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-admin默认参数</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">author_id:</span> <span class="string">defaultAuthorId</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure><br><img src="https://f.pz.al/pzal/2023/05/14/45fdd92fc3066.png" alt="img_6"></p>
<h4 id="2-4-linux自动提交脚本"><a href="#2-4-linux自动提交脚本" class="headerlink" title="2.4 linux自动提交脚本"></a>2.4 linux自动提交脚本</h4><p>在<code>_config.yml</code>的“admin”参数中加入一个子参数<code>deployCommand: &#39;./admin_script.sh&#39;</code><br><img src="https://f.pz.al/pzal/2023/05/14/6ac61347fe165.png" alt="img_7"><br>在hexo博客目录下新建<code>admin_script.sh</code>文件，输入以下内容：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env sh</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g  -d</span><br></pre></td></tr></table></figure><br>本人是windows系统，该方法未实践过，不知道可不可行。看过官方的GitHub，都没有提过<code>deployCommand</code>这个东西。</p>
<p>可能在这个插件的使用中会出现一些问题，比如图片插入失败等问题。在另一篇文章里讲述这些问题的解决方法，是通过修改源码解决问题的，同时附带了修改后的补丁。见另一篇文章：<a href="https://blog.csdn.net/nineya_com/article/details/103384546">hexo-admin插件windows系统插入图片失败问题解决，hexo-admin汉化，通过修改源码完美解决，以及插件的一点点优化</a></p>
<h2 id="Hexo-Hey"><a href="#Hexo-Hey" class="headerlink" title="Hexo Hey"></a>Hexo Hey</h2><p>在使用 Hexo Hey 之前，我一直在使用 VSCode（配合 vscode-hexo 插件）来管理博客。虽然可以很快捷 的新建,部署, 测试,发布 博客 ，但还是很麻烦，离我理想中的博客平台还有一定的距离。 我在知乎上发现了 Hexo Hey 这个插件，尝试了一下，虽然有各种问题，但确实很好用。 因此决定写一篇文章来介绍一下如何安装, 使用 Hexo Hey。</p>
<p>切换换到 Hexo Hey 后最不习惯的地方就是没有了 VSCode 中那些方便的快捷键了。(ノへ￣、) 擦眼泪……</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol>
<li>Node.js &lt;- 就是安 Hexo 时用到的拿货，应该已经有了，就不贴安装地址了。</li>
<li>Hexo Hey &lt;- 通过 npm 安装。</li>
</ol>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="安装-Hexo-Hey"><a href="#安装-Hexo-Hey" class="headerlink" title="安装 Hexo Hey"></a>安装 Hexo Hey</h4><p>首先进入已配置好的那个 Hexo 目录：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> [你的 Hexo 目录]</span></span><br></pre></td></tr></table></figure><br>输入一下命令安装 Hexo Hey：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-hey --save</span></span><br></pre></td></tr></table></figure><br><img src="https://f.pz.al/pzal/2023/05/14/787a04872e8f8.jpg" alt="img_8"><br>然后打开 Hexo 目录 中的<code>_config.yml</code>文件，在结尾加上如下代码： 将<code>[你的用户名]</code>, <code>[你的密码]</code> 改为你喜欢的用户名和密码<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Admin</span></span><br><span class="line"><span class="attr">admin:</span></span><br><span class="line">    <span class="attr">name:</span> [<span class="string">你的用户名</span>]</span><br><span class="line">    <span class="attr">password:</span> [<span class="string">你的密码</span>]</span><br><span class="line">    <span class="attr">secret:</span> <span class="string">hey</span> <span class="string">hexo</span></span><br><span class="line">    <span class="attr">expire:</span> <span class="number">60</span><span class="string">*1</span></span><br><span class="line">    <span class="comment"># cors: http://localhost:3000</span></span><br></pre></td></tr></table></figure><br>重新部署一遍 Hexo，开启 Hexo 的本地服务器<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s</span></span><br></pre></td></tr></table></figure><br>现在访问 <code>http://localhost:4000/admin</code> 看看效果。(๑•̀ㅂ•́) ✧<br><img src="https://s3.uuu.ovh/imgs/2023/05/27/4d5ab13ffb58accc.png" alt="img_9"></p>
<h4 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h4><ol>
<li>不能自动保存（隔壁 Hexo Admin 就没这毛病），<code>也不能用 ctrl + S</code> 的快捷键保存文章。</li>
<li>有篇文章没有 <code>编辑</code> 按钮。（难道是因为我在文章中用了 ‘华丽的分界线’(￣△￣；)）<br><img src="https://s3.uuu.ovh/imgs/2023/06/01/ea5ff9ceb879faaf.png" alt="img_10"></li>
<li><strong>图片管理非常不友好！！！虽然可以通过托拽插入图片，但此方法插入的图片都保存在 \source\images 文件夹下，这与官方推荐的方法不同。</strong>（官方推荐的方法是将图片放入与文章同名的资源文件夹中）</li>
<li><strong>Hexo Hey 的 Markdown 渲染引擎无法识别 Hexo 中的标签插件</strong><br><img src="https://f.pz.al/pzal/2023/05/14/fc221f6fcf0c0.png" alt="img_11"></li>
<li>那个 <code>发布</code> 的意思实际上是 <code>部署</code>，发布到 Github Pages 或者其他远程服务器仍然需要手动。</li>
<li>必须启动 Hexo 的本地服务器才能使用。</li>
<li>目前就发现了这么多…</li>
</ol>
<h4 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h4><h5 id="开机启动-Hexo-Server（后台）"><a href="#开机启动-Hexo-Server（后台）" class="headerlink" title="开机启动 Hexo Server（后台）"></a>开机启动 Hexo Server（后台）</h5><p>开机后，在后台自动启动 Hexo 本地服务器可以在一定程度上解决问题6。 首先要创建两个脚本文件 <code>hexo-server.vbs</code> 和<code>hexo-server.bat</code>。 <strong>hexo-server.vbs:</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set ws=WScript.CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">ws.Run &quot;[你的 Hexo 文件夹]\\hexo-server.bat /start&quot;,0</span><br></pre></td></tr></table></figure><br><strong>注意：这里的[你的 Hexo 文件夹]中的 \ 符号需要转义。 例如，C:\Users\user\Hexo 需要转义为 C:\Users\user\Hexo</strong><br><strong>hexo-server.bat:</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd [你的 Hexo 文件夹]</span><br><span class="line">hexo s -d</span><br></pre></td></tr></table></figure><br>然后将 <code>hexo-server.bat</code> 放入[你的 Hexo 文件夹]中。 将 <code>hexo-server.vbs</code> 放入 <code>C:\Users\[你的用户名]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code> 中。 不确定自己用户名什么，可以到 <code>C:\Users\</code>  中确认一下。 实在是找不到这个文件夹请 Google <code>Windows 开机启动的文件夹。</code></p>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul>
<li><a href="https://blog.csdn.net/nineya_com/article/details/103380243">hexo博客使用hexo-admin插件管理文章</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/64965187">使用 Hexo Hey 管理你的博客</a></li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>保姆级Hexo教程1-安装</title>
    <url>/posts/3fe50ae2.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文将使用Hexo6.3.0和butterfly主题4.8.5作为示例教程，如有变动，我会及时更新，有问题的可以评论区提出。</p>
<h2 id="安装必要软件"><a href="#安装必要软件" class="headerlink" title="安装必要软件"></a>安装必要软件</h2><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>打开 <a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a> 选择长期维护版下载安装程序。打开安装程序，一直点next就好了。<br>安装完成后，按住<code>Win+R</code>，输入cmd，输入一下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>
<p>如果输出了版本号，证明安装成功。<br><img src="https://s3.uuu.ovh/imgs/2023/05/27/a2e57a0c63d4c966.png" alt="nodejs版本号"></p>
<h3 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h3><h4 id="查看系统的类型"><a href="#查看系统的类型" class="headerlink" title="查看系统的类型"></a>查看系统的类型</h4><h5 id="Windows8以上"><a href="#Windows8以上" class="headerlink" title="Windows8以上"></a>Windows8以上</h5><p>打开设置-系统-关于-设备规格-系统类型，记住你是 x32 还是 x64。</p>
<h5 id="Windows7以下"><a href="#Windows7以下" class="headerlink" title="Windows7以下"></a>Windows7以下</h5><p>右键计算机，找到系统类型，记住你是 x32 还是 x64。</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h5><p>打开 <a href="https://git-scm.com/download/windows">https://git-scm.com/download/windows</a> 选择你的系统，然后按照你上一步找到的系统类型下载。是 x32 就下载 32-bit Git for Windows Setup，是x64就下载 64-bit Git for Windows Setup。</p>
<h5 id="Macos"><a href="#Macos" class="headerlink" title="Macos"></a>Macos</h5><p>在 Mac 上安装 Git 有多种方式。 最简单的方法是安装 Xcode Command Line Tools。 Mavericks （10.9） 或更高版本的系统中，在 Terminal 里尝试首次运行 ‘git’ 命令即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure>
<p>如果没有安装过命令行开发者工具，将会提示你安装。</p>
<p>如果你想安装更新的版本，可以使用二进制安装程序。 官方维护的 macOS Git 安装程序可以在 Git 官方网站下载，网址为<a href="https://git-scm.com/download/mac。">https://git-scm.com/download/mac。</a><br><img src="https://s3.uuu.ovh/imgs/2023/05/27/6c1b569299ef46ca.png" alt="git_macos_install"><br>你也可以将它作为 GitHub for macOS 的一部分来安装。 它们的图形化 Git 工具有一个安装命令行工具的选项。 你可以从 GitHub for macOS 网站下载该工具，网址为 <a href="https://mac.github.com。">https://mac.github.com。</a></p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<h3 id="Node-js-版本限制"><a href="#Node-js-版本限制" class="headerlink" title="Node.js 版本限制"></a>Node.js 版本限制</h3><p>根据Hexo官方文档描述，我们强烈建议永远安装最新版本的 Hexo，以及 推荐的 Node.js 版本。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Hexo 版本</th>
<th style="text-align:center">最低版本 (Node.js 版本)</th>
<th style="text-align:center">最高版本 (Node.js 版本)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">6.2+</td>
<td style="text-align:center">12.13.0</td>
<td style="text-align:center">latest</td>
</tr>
<tr>
<td style="text-align:center">6.0+</td>
<td style="text-align:center">12.13.0</td>
<td style="text-align:center">18.5.0</td>
</tr>
<tr>
<td style="text-align:center">5.0+</td>
<td style="text-align:center">10.13.0</td>
<td style="text-align:center">12.0.0</td>
</tr>
<tr>
<td style="text-align:center">4.1 - 4.2</td>
<td style="text-align:center">8.10</td>
<td style="text-align:center">10.0.0</td>
</tr>
<tr>
<td style="text-align:center">4.0</td>
<td style="text-align:center">8.6</td>
<td style="text-align:center">8.10.0</td>
</tr>
<tr>
<td style="text-align:center">3.3 - 3.9</td>
<td style="text-align:center">6.9</td>
<td style="text-align:center">8.0.0</td>
</tr>
<tr>
<td style="text-align:center">3.2 - 3.3</td>
<td style="text-align:center">0.12</td>
<td style="text-align:center">未知</td>
</tr>
<tr>
<td style="text-align:center">3.0 - 3.1</td>
<td style="text-align:center">0.10 或 iojs</td>
<td style="text-align:center">未知</td>
</tr>
<tr>
<td style="text-align:center">0.0.1 - 2.8</td>
<td style="text-align:center">0.10</td>
<td style="text-align:center">未知</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>编程</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Git</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>版本号规范</title>
    <url>/posts/51d32d85.html</url>
    <content><![CDATA[<h2 id="版本号"><a href="#版本号" class="headerlink" title="版本号"></a>版本号</h2><p><code>a.b.c_d-e</code><br /><code>a</code>: 主版本号 出现大体不兼容或修改的 或 出现大体兼容修改时 修改本数值。<br /><code>b</code>: 子版本号 出现小规模兼容修改时 或 出现重大漏洞时 修改本数值。<br /><code>c</code>: 阶段版本号 修复较小漏洞并且与旧功能兼容时 修改此数值。<br /><code>d</code>: 版本区分号 具体看下方“版本区分号”说明。<br /><code>e</code>: 实时提交次数。</p>
<h2 id="版本区分号"><a href="#版本区分号" class="headerlink" title="版本区分号"></a>版本区分号</h2><p>Alpha — 内部测试版<br />Beta — 公开测试版<br />Cardware — 属共享软件的一种，只要给作者回复一封电邮或明信片即可。目前这种形式已不多见。<br />CHT — 繁体中文版<br />CN/SPC — 简体中文版<br />EN — 英文版<br />Corporation &amp; Enterprise — 企业版<br />Deluxe — 豪华版<br />Demo — 演示版<br />Dev — 开发专用版，程序员版本<br />Enhance — 增强版&amp;加强版 （属于正式版）<br />Express&amp;Special —特别版<br />Final — 最终版<br />Free — 免费版<br />Full version — 完全版 （属于正式版）<br />Green — 绿色版&amp;；破解版<br />Mini — 迷你版&amp;；精简版，只有最基本的功能，占用资源较少<br />Multi-language — 多语言版<br />Plus — 属增强版，不过大部分是在程序界面及功能上增强。<br />Preview —预览版<br />Professional — 专业版<br />Regged/Registered — 已注册版<br />Release — 发行版<br />Retail/RTM — 零售版<br />Shareware — 共享版<br />Stable — 稳定版<br />Standard — 标准版<br />Ultimate — 旗舰版<br />Upgrade — 升级版</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="非正式版"><a href="#非正式版" class="headerlink" title="非正式版"></a>非正式版</h3><p>α（alpha）版<br />此版本表示该软件仅仅是一个初步完成品，通常只在软件开发者内部交流，也有很少一部分发布给专业测试人员。也有少部分软件公司会公开alpha版的软件<br />一般而言，该版本软件的 bug 较多，普通用户最好不要安装。<br />β（Beta）版<br />该版本相对于α版已有了很大的改进，消除了严重的错误，但还是存在着一些缺陷，需要经过大规模的发布测试来进一步消除。这一版本通常由软件公司免费发布，用户可从相关的站点下载。通过一些专业爱好者的测试，将结果反馈给开发者，开发者们再进行有针对性的修改。该版本也不适合一般用户安装。<br />γ（gamma）版<br />该版本已经相当成熟了，与即将发行的正式版相差无几，如果用户实在等不及了，尽可以装上一试。<br />Trial（试用版）<br />试用版软件在最近的几年里颇为流行，主要是得益于互联网的迅速发展。该版本软件通常都有时间限制，过期之后用户如果希望继续使用，一般得交纳一定的费用进行注册或购买。有些试用版软件还在功能上做了一定的限制。<br />Unregistered（未注册版）<br />未注册版与试用版极其类似，只是未注册版通常没有时间限制，在功能上相对于正式版做了一定的限制，例如绝大多数网络电话软件的注册版和未注册版，两者之间在通话质量上有很大差距。还有些虽然在使用上与正式版毫无二致，但是动不动就会弹出一个恼人的消息框来提醒你注册，如看图软件acdsee 、智能陈桥汉字输入软件等。<br />Demo版<br />也称为演示版，在非正式版软件中，该版本的知名度最大。demo 版仅仅集成了正式版中的几个功能，颇有点像 unregistered。不同的是， demo 版一般不能通过升级或注册的方法变为正式版。<br />以上是软件正式版本推出之前的几个版本，α、β、γ可以称为测试版，大凡成熟软件总会有多个测试版，如 windows 98 的β版，前前后后将近有 10 个。这么多的测试版一方面为了最终产品尽可能地满足用户的需要，另一方面也尽量减少了软件中的 bug。而 trial 、 unregistered 、 demo 有时统称为演示版，这一类版本的广告色彩较浓，颇有点先尝后买的味道，对于普通用户而言自然是可以免费尝鲜了。</p>
<h3 id="正式版"><a href="#正式版" class="headerlink" title="正式版"></a>正式版</h3><p>不同类型的软件的正式版本通常也有区别。<br />Release<br />该版本意味“最终释放版”，在出了一系列的测试版之后，终归会有一个正式版本，对于用户而言，安装该版本的软件绝对不会错。该版本有时也称为标准版。一般情况下， release 不会以单词形式出现在软件封面上，取而代之的是符号 (r) ，如 windows nt(r) 4.0 、 ms-dos(r) 6.22 等。<br />Registered<br />很显然，该版本是与 unregistered 相对的注册版。注册版、 release 和下面所讲的 standard 版一样，都是软件的正式版本，只是注册版软件的前身有很大一部分是从网上下载的。<br />Standard<br />这是最常见的标准版，不论是什么软件，标准版一定存在。标准版中包含了该软件的基本组件及一些常用功能，占用资源较高级版低，可以满足一般用户的需求。对于收费软件来说，其价格相对高一级版本而言还是“平易近人”的。<br />Deluxe<br />顾名思义即为“豪华版”。豪华版通常是相对于标准版而言的，主要区别是多了几项功能，价格当然会高出一大块，不推荐一般用户购买。此版本通常是为那些追求“完美”的专业用户所准备的。<br />Reference<br />该版本型号常见于百科全书中，比较有名的是微软的 encarta 系列。reference 是最高级别，其包含的主题、图像、影片剪辑等相对于 standard 和 deluxe 版均有大幅增加，容量由一张光盘猛增至三张光盘，并且加入了很强的交互功能，当然价格也不菲。可以这么说，这一版本的百科全书才能算是真正的百科全书，也是发烧友们收藏的首选。<br />Professional（专业版）<br />专业版是针对某些特定的开发工具软件而言的。专业版中有许多内容是标准版中所没有的，这些内容对于一个专业的软件开发人员来说是极为重要的。如微软的 visual foxpro 标准版并不具备编译成可执行文件的功能，这对于一个完整的开发项目而言显然是无法忍受的，若客户机上没有 foxpro 将不能使用。如果用专业版就没有这个问题了。<br />Enterprise（企业版）<br />企业版是开发类软件中的极品（相当于百科全书中的 reference 版）。拥有一套这种版本的软件可以毫无障碍地开发任何级别的应用软件。如著名的 visual c++ 的企业版相对于专业版来说增加了几个附加的特性，如 sql 调试、扩展的存储过程向导、支持 as/400 对 ole db 的访问等。而这一版本的价格也是普通用户无法接受的。如微软的 visual studios 6.0 enterprise 中文版的价格为 23000 元。</p>
<h3 id="专有版本"><a href="#专有版本" class="headerlink" title="专有版本"></a>专有版本</h3><p>除了以上介绍的一些版本外，还有一些专有版本名称。<br />Update（升级版）<br />升级版的软件是不能独立使用的，该版本的软件在安装过程中会搜索原有的正式版，如果不存在，则拒绝执行下一步。如 microsoft office 2000 升级版、 windows 9x 升级版等等。<br />OEM版<br />OEM 版通常是捆绑在硬件中而不单独销售的版本。将自己的产品交给别的公司去卖，保留自己的著作权，双方互惠互利，一举两得。<br />单机（网络）版<br />网络版在功能、结构上远比单机版复杂，如果留心一下软件的报价，你就会发现某些软件单机版和网络版的价格相差非常大，有些网络版甚至多一个客户端口就要加不少钱。<br />普及版<br />该版本有时也会被称为共享版，其特点是价格便宜（有些甚至完全免费）、功能单一、针对性强（当然也有占领市场、打击盗版等因素）。与试用版不同的是，该版本的软件一般不会有时间上的限制。当然，如果用户想升级，最好还是去购买正式版。</p>
<h3 id="其他版本"><a href="#其他版本" class="headerlink" title="其他版本"></a>其他版本</h3><p>破解版又称绿色版，严格来说这不属于一种授权版本，因为它是针对商业版、试用版、共享版这类有使用限制的软件进行二次开发之后形成的特殊版本，也就是说，使用者可以在没有任何经济付出的条件下无限制的使用该软件的全部功能。一般通过改写原软件、制作算号器、拦截注册信息等等方式实现。<br />以上是一些常见软件版本的简要介绍，随着软件市场行为的变化，现在也出现了一些新的版本命名方式，比如windows xp中的xp是取自于experience中的第二、第三个字母。希望以上内容能够对大家的购买、使用和下载软件有所帮助。<br />基于商业上考虑，很多的软件都不是非常严谨的遵循这个规则的。最有名的就是微软了。例如他的 NT 系列版本。大家比较熟悉的是从 NT 4.0 开始的。99 年推出了 windows 2000 ， 2001 年推出了 windows xp ， 2003 年推出了 windows 2003 ，乍一看版本区别蛮大的，但是看他们的内部版本号就会发现，变化其实并不大，只是界面变化的大了而已。这是软件公司经常干的事情。Windows 2000 的版本号是 NT 5.0 ， windows xp 的版本号是 NT 5.1 ， windows 2003 的版本号是 NT 5.2 ，Windows Vista和现在的Windows7 的版本号是 NT 6.0和NT 6.1，才是跨越化的版本。这样做的话就可以持续的赚广大客户的钱。毕竟人的眼睛看得东西是最直观的，所以给人感觉也是变化最大的。</p>
<h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><blockquote>
<p><a href="https://waddle.coco-central.cn/docs/#/dev/4-%E7%89%88%E6%9C%AC%E5%8F%B7%E8%A7%84%E8%8C%83">https://waddle.coco-central.cn/docs/#/dev/4-%E7%89%88%E6%9C%AC%E5%8F%B7%E8%A7%84%E8%8C%83</a><br><a href="https://baike.baidu.com/item/%E7%89%88%E6%9C%AC%E5%8F%B7/7674145?fr=aladdin">https://baike.baidu.com/item/%E7%89%88%E6%9C%AC%E5%8F%B7/7674145?fr=aladdin</a><br><a href="https://blog.csdn.net/qq_35246620/article/details/78443169">https://blog.csdn.net/qq_35246620/article/details/78443169</a><br><a href="https://blog.csdn.net/weixin_38984879/article/details/124819491">https://blog.csdn.net/weixin_38984879/article/details/124819491</a><br><a href="https://blog.csdn.net/weixin_41682466/article/details/98481445">https://blog.csdn.net/weixin_41682466/article/details/98481445</a><br><a href="https://blog.csdn.net/liujia216/article/details/53102908">https://blog.csdn.net/liujia216/article/details/53102908</a><br><a href="https://blog.csdn.net/qiphon3650/article/details/125421934">https://blog.csdn.net/qiphon3650/article/details/125421934</a><br><a href="https://download.csdn.net/download/bbkxw001/12003779">https://download.csdn.net/download/bbkxw001/12003779</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzI3MDAxODk0Ng==&amp;mid=2650015847&amp;idx=1&amp;sn=22cbdc5f33b1b0fa10240fe7bea88bd4&amp;mpshare=1&amp;scene=23&amp;srcid=0725qNBZrEO9h8NP3svRmdGp#rd">https://mp.weixin.qq.com/s?__biz=MzI3MDAxODk0Ng</a><br><a href="https://www.jianshu.com/p/c673b8c75a81">https://www.jianshu.com/p/c673b8c75a81</a><br><a href="https://zhuanlan.zhihu.com/p/508354840">https://zhuanlan.zhihu.com/p/508354840</a><br><a href="https://zhuanlan.zhihu.com/p/492569838">https://zhuanlan.zhihu.com/p/492569838</a><br><a href="https://cloud.tencent.com/developer/article/2017396">https://cloud.tencent.com/developer/article/2017396</a><br><a href="https://developer.aliyun.com/article/11531">https://developer.aliyun.com/article/11531</a><br><a href="https://developer.android.google.cn/jetpack/androidx/versions?hl=zh-cn">https://developer.android.google.cn/jetpack/androidx/versions?hl=zh-cn</a><br><a href="https://juejin.cn/post/7073902470585384990">https://juejin.cn/post/7073902470585384990</a><br><a href="https://www.woshipm.com/pmd/4053949.html">https://www.woshipm.com/pmd/4053949.html</a><br><a href="https://www.21ic.com/article/891440.html">https://www.21ic.com/article/891440.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>编程小知识</tag>
      </tags>
  </entry>
  <entry>
    <title>网页跳转大师解决方案</title>
    <url>/posts/f35e1f9c.html</url>
    <content><![CDATA[<h2 id="开源文件"><a href="#开源文件" class="headerlink" title="开源文件"></a>开源文件</h2><p><a href="https://www.yuque.com/attachments/yuque/0/2022/json/29771975/1672391223175-b8e0e1bd-3998-4c18-b565-a74d47133eb1.json?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2022%2Fjson%2F29771975%2F1672391223175-b8e0e1bd-3998-4c18-b565-a74d47133eb1.json%22%2C%22name%22%3A%22%E7%BD%91%E9%A1%B5%E8%B7%B3%E8%BD%AC%E5%A4%A7%E5%B8%88%20(1">网页跳转大师 (1).json</a>.json%22%2C%22size%22%3A85126%2C%22type%22%3A%22application%2Fjson%22%2C%22ext%22%3A%22json%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22mode%22%3A%22title%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22ub6d5691c-f7fc-41e1-9572-70d8a84ef7b%22%2C%22taskType%22%3A%22upload%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ua0ba560c%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D)<br>bcm社区链接：<a href="https://shequ.codemao.cn/work/165115720">https://shequ.codemao.cn/work/165115720</a><br>H5体验链接：<a href="https://coco.codemao.cn/editor/player/165115720?channel=h5">https://coco.codemao.cn/editor/player/165115720?channel=h5</a><br>跳转示例链接：<a href="https://static.codemao.cn/coco/player/unstable/HkNmju0Fo.text/html?hash=Fiu0gLSlDjqjtILKqwu7isT_ngaY">https://static.codemao.cn/coco/player/unstable/HkNmju0Fo.text/html?hash=Fiu0gLSlDjqjtILKqwu7isT_ngaY</a></p>
<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>在猫站社区的规则中，是不允许文章或评论中存在外链的，但是这个规则中猫站站内链接是可以显示的，所以就诞生了网页跳转大师</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h3><p>可以用多行文本框控件来实现显示代码<br>html代码的简单原理就是点击图片跳转链接。<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://static.codemao.cn/coco/player/unstable/Hkq4GIG4o.image/x-icon?hash=Fg76VPQ74KyWtkymzzZlASwT34yf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">         <span class="selector-class">.center</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>:center;  </span></span><br><span class="line"><span class="language-css">         &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">&#x27;https://static.runoob.com/images/mix/gradient2.png&#x27;</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-repeat</span>:repeat-x;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CoCo网页跳转大师<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://static.codemao.cn/coco/player/unstable/Syl7w4M4j.image/jpeg?hash=FrgDbd7IP4nYA3hx7X_ZbJoe_Ak7&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>您即将打开网址：链接<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>点击图片打开页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>此网站由用户自行提供，与haloged工作室无关，请谨防诈骗。<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://coco.codemao.cn/editor/player/165115720?channel=h5&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>点击打开网页跳转大师<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>版本号：2.0.0<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="网页托管"><a href="#网页托管" class="headerlink" title="网页托管"></a>网页托管</h3><p>猫站CoCo有一个控件叫照相机，照相机有一个积木可以上传文件到bcm图床<br>然后把一个输入框的输入文本设为刚刚上传到bcm图床的文件生成的链接<br>然后再重置图床<br>一个网页托管就做好了<br><img src="https://s1.vika.cn/space/2023/01/23/3c8bc8aeb4ee4858be2816f8eb034a20" alt="block (1).png"></p>
<h2 id="引用控件"><a href="#引用控件" class="headerlink" title="引用控件"></a>引用控件</h2><div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>作者</th>
<th>文件</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>多行输入框</strong></td>
<td>DL1</td>
<td>官方控件商城</td>
</tr>
<tr>
<td>截图工具</td>
<td>编程猫官方</td>
<td>官方控件商城</td>
</tr>
<tr>
<td>文件工具箱</td>
<td>小宏XeLa</td>
<td>官方控件商城</td>
</tr>
<tr>
<td>剪切板</td>
<td>小宏XeLa</td>
<td>官方控件商城</td>
</tr>
<tr>
<td>控制台报错/警告</td>
<td>ZouBochen</td>
<td><a href="https://www.yuque.com/attachments/yuque/0/2022/js/29771975/1672391966904-d209a333-a672-4ae4-8824-2188a5d06965.js?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2022%2Fjs%2F29771975%2F1672391966904-d209a333-a672-4ae4-8824-2188a5d06965.js%22%2C%22name%22%3A%22%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%8A%A5%E9%94%99_%E8%AD%A6%E5%91%8A.js%22%2C%22size%22%3A1607%2C%22type%22%3A%22text%2Fjavascript%22%2C%22ext%22%3A%22js%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22mode%22%3A%22title%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u49726f1c-7064-4dc9-bb82-3e73672bac6%22%2C%22taskType%22%3A%22upload%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22u0baac0a9%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D">控制台报错_警告.js</a></td>
</tr>
</tbody>
</table>
</div>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个网页跳转大师我差不多只做了十五分钟左右，但是那个网页我差不多改了一个小时。所以说请大家多多使用。开源文件开头就有，如有需要自取。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Codemao</tag>
      </tags>
  </entry>
  <entry>
    <title>网页跳转大师</title>
    <url>/posts/3b321daf.html</url>
    <content><![CDATA[<p>你是否还在为作品无法跳转链接尔烦恼呢？来试试网页跳转大师吧！他能解决一切烦恼。<br /><img src="https://s1.vika.cn/space/2023/01/23/ab9f4a481cfa45169fdae918923dddfd" alt="网页捕获_28-10-2022_234010_coco.codemao.cn.jpeg"><br /><img src="https://s1.vika.cn/space/2023/01/23/b799bf446eb24608ba9f4be26bea3599" alt="IMG_20221102_194721.jpg"></p>
<p>在线体验链接：<a href="https://coco.codemao.cn/editor/player/165115720?channel=h5">https://coco.codemao.cn/editor/player/165115720?channel=h5</a><br />下载链接：<a href="https://creation.codemao.cn/434/CE0D743605A74DDC9D4438C6D6EF5CA9/网页跳转大师.apk">https://creation.codemao.cn/434/CE0D743605A74DDC9D4438C6D6EF5CA9/网页跳转大师.apk</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Codemao</tag>
      </tags>
  </entry>
  <entry>
    <title>哔哩哔哩宣布与B站终止合作是怎么回事？不懂会闹大笑话！</title>
    <url>/posts/33d44a23.html</url>
    <content><![CDATA[<p>哔哩哔哩宣布与B站终止合作是怎么一回事？哔哩哔哩宣布与B站终止合作是什么梗？哔哩哔哩宣布与B站终止合作最近为什么这么火呢？&lt;/br&gt;众所周知，哔哩哔哩宣布与B站终止合作是最近非常火的一个词。那么哔哩哔哩宣布与B站终止合作到底是什么梗呢？相信大家对哔哩哔哩宣布与B站终止合作都很熟悉，哔哩哔哩宣布与B站终止合作就是我们每天都会经常遇到的，但是哔哩哔哩宣布与B站终止合作是怎么回事呢？下面就让小编带大家一起了解一下哔哩哔哩宣布与B站终止合作是怎么回事吧。&lt;/br&gt;哔哩哔哩宣布与B站终止合作最近能火，其实就是哔哩哔哩宣布与B站终止合作受到了大家的关注。大家可能会感到很惊讶，哔哩哔哩宣布与B站终止合作为什么是这样的？哔哩哔哩宣布与B站终止合作究竟为什么火起来了呢？但事实就是这样，小编也感到非常惊讶。&lt;/br&gt;以上就是小编为大家带来的的关于哔哩哔哩宣布与B站终止合作是什么意思，哔哩哔哩宣布与B站终止合作是什么梗的内容。如果大家喜欢，可以点赞表示对小编的支持。欢迎在下方评论和小编一起讨论喔</p>
]]></content>
      <tags>
        <tag>营销号文案</tag>
      </tags>
  </entry>
  <entry>
    <title>一言生成器</title>
    <url>/posts/ced3dee7.html</url>
    <content><![CDATA[<p>您还在为找不到好的句子而发愁吗？一言生成器可以满足您的愿望。内置3个API接口，好句子充足。如果您对3个API里的句子还不满意，还有ChatGPT供您选择。</p>
<h1 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>点击<a href="https://github.com/haloged/get_hitokoto/releases">此处</a>找到<code>Windows-x64.zip</code>并下载<br><img src="https://github.com/haloged/get_hitokoto/assets/101408211/6995edc6-7a72-446e-95d8-98957f747068" alt="image"><br>下载完成后解压双击<code>一言生成器.exe</code>即可使用</p>
<h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h2><p><del>MacOS版本需要下载Python环境</del></p>
<p>自1.1.1版本起，MacOS只需下载安装版本即可</p>
<h3 id="安装版本"><a href="#安装版本" class="headerlink" title="安装版本"></a>安装版本</h3><p>点击<a href="https://github.com/haloged/get_hitokoto/releases">此处</a>找到<code>Mac-os.zip</code>并下载<br><img src="https://github.com/haloged/get_hitokoto/assets/101408211/ccab7fa8-7b2c-4814-bd11-aabd4a358eca" alt="image"><br>下载完成后解压双击<code>一言生成器.pkg</code>安装即可使用。</p>
<h3 id="编译版本"><a href="#编译版本" class="headerlink" title="编译版本"></a>编译版本</h3><p>编译版本需要下载Python环境。</p>
<p><strong>如果您是第一次使用，您需执行4步，如不是第一次使用，只需执行第四步即可。</strong></p>
<ol>
<li>点击<a href="https://www.python.org/ftp/python/3.8.3/python-3.8.3-macosx10.9.pkg">这里</a>下载并点击安装</li>
<li>下载完成后，打开<a href="https://github.com/haloged/get_hitokoto/blob/main/gui.py">这里</a>,同时按下<code>Command+Shift+S</code>,选择一个位置保存，记住这个位置。</li>
<li>点按程序坞中的“启动台”图标 ，在搜索栏中键入“终端”，然后点按“终端”。在终端中输入<code>pip install openai</code>。</li>
<li>找到你第三步保存的位置，点击<code>gui.py</code>即可运行。爬取的一言文件将保存在<code>gui.py</code>同目录的<code>log.txt</code>中。</li>
</ol>
<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>Linux版本需要下载Python环境</p>
<ol>
<li>查看当前python环境版本</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure>
<ol>
<li>首先安装编译安装时需要的依赖包，编译python源码时，需要一些依赖包，一次安装完毕</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make libffi-devel</span><br></pre></td></tr></table></figure>
<ol>
<li>根据需要下载对应的Python版本：<br>服务器下载较慢时，可以在官网下载到本地之后，再上传到服务器。</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/3.7.0/Python-3.7.2.tgz</span><br></pre></td></tr></table></figure>
<ol>
<li>解压python安装包</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> opttar -zxvf Python-3.7.2.tgz</span><br></pre></td></tr></table></figure>
<ol>
<li>新建一个python3的安装目录</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /usr/local/python3</span><br></pre></td></tr></table></figure>
<ol>
<li>编译安装</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> Python-3.7.2/./configure --prefix=/usr/local/python3make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<ol>
<li>添加软连接</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/local/python3/bin/python3 /usr/bin/python3ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure>
<ol>
<li>验证是否安装成功</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python3 --versionpip -V</span><br></pre></td></tr></table></figure>
<ol>
<li>打开<a href="https://github.com/haloged/get_hitokoto/blob/main/gui.py">这里</a>,选择一个位置保存，记住这个位置。</li>
<li>打开终端，输入以下代码：</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip install openai</span><br></pre></td></tr></table></figure>
<ol>
<li>找到你第九步保存的位置，点击<code>gui.py</code>即可运行。爬取的一言文件将保存在<code>gui.py</code>同目录的<code>log.txt</code>中。</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>仓库链接：<a href="https://github.com/haloged/get_hitokoto/">https://github.com/haloged/get_hitokoto/</a></p>
<p>如果您访问不了以上链接，下载请访问<a href="https://gitee.com/haloged/get_hitokoto/releases">https://gitee.com/haloged/get_hitokoto/releases</a></p>
<p>如果觉得项目好的可以给个star哦！如果有要改进代码的可以提交PR！</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>一言</tag>
        <tag>一言生成器</tag>
        <tag>API</tag>
        <tag>Github</tag>
        <tag>hitokoto</tag>
      </tags>
  </entry>
  <entry>
    <title>保姆级Hexo教程2-主题安装</title>
    <url>/posts/d8f7872c.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本教程基于Butterfly4.8.5制作，如后期版本更新导致教程失效，请在评论区与我联系</p>
<h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo init &lt;folder&gt;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> &lt;folder&gt;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install</span></span><br></pre></td></tr></table></figure>
<p>新建完成后，指定文件夹的目录如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>
<h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>网站的配置信息，您可以在此配置大部分的参数。</p>
<h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>应用程序的信息。<a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/">Markdown</a> 渲染引擎 已默认安装，您可以自由移除。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><p>模板文件夹。当您新建文章时，Hexo 会根据 scaffold 来创建文件。</p>
<p>Hexo 的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改 <code>scaffold/post.md</code> 中的 Front-matter 内容，那么每次新建一篇文章时都会包含这个修改。</p>
<h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p>
<h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p><a href="https://hexo.io/zh-cn/docs/themes">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。（本教程已弃用）</p>
<h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><div class="tabs" id="下载主题"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#下载主题-1">npm安装（推荐）</button></li><li class="tab"><button type="button" data-href="#下载主题-2">Git安装（Gitee）</button></li><li class="tab"><button type="button" data-href="#下载主题-3">Git安装（Github）</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="下载主题-1"><blockquote>
<p>此方法只支持 Hexo 5.0.0 以上版本</p>
<p><strong>通过 npm 安装并不会在 themes 里生成主题文件夹，而是在 node_modules 里生成</strong></p>
</blockquote>
<p>在你的 Hexo 根目录里</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-butterfly</span><br></pre></td></tr></table></figure>
<div class="note info simple"><p>升级方法：在 Hexo 根目录下，运行 <code>npm update hexo-theme-butterfly</code></p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="下载主题-2"><p><strong>稳定版【建议】</strong><br>在你的 Hexo 根目录里</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>
<p>测试版</p>
<div class="note danger flat"><p>测试版可能存在Bugs，追求稳定的请安装稳定版</p>
</div>
如果想要安装比较新的dev分支，可以

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b dev https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>

<div class="note info simple"><p>升级方法：在主题目录下，运行 <code>git pull</code></p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="下载主题-3"><p><strong>稳定版【建议】</strong><br>在你的 Hexo 根目录里</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>
<p>测试版</p>
<div class="note danger flat"><p>测试版可能存在Bugs，追求稳定的请安装稳定版</p>
</div>
如果想要安装比较新的dev分支，可以

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>

<div class="note info simple"><p>升级方法：在主题目录下，运行 <code>git pull</code></p>
</div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>修改 Hexo 根目录下的 <code>_config.yml</code>，把主题改为 <code>butterfly</code>。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure>
<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>
<h2 id="升级建议"><a href="#升级建议" class="headerlink" title="升级建议"></a>升级建议</h2><p>为了减少升级主题后带来的不便，请使用以下方法（建议，可以不做）。</p>
<p>前往博客目录-node_modules-hexo-theme-butterfly<br>在 hexo 的根目录创建一个文件 <code>_config.butterfly.yml</code>，并把上述目录的<code>_config.yml</code> 内容复制到 <code>_config.butterfly.yml</code> 去。( 注意: 复制的是主题的 <code>config.yml</code>，而不是 hexo 的 <code>onfig.yml</code>)</p>
<blockquote>
<p>注意： 不要把主题目录的 <code>config.yml</code>删掉。</p>
<p>注意： 以后只需要在 <code>config.butterfly.yml</code>进行配置就行。</p>
<p>如果使用了<code>_config.butterfly.yml</code> 配置主题的 <code>config.yml</code>将不会有效果。</p>
</blockquote>
<p>Hexo会自动合併主题中的 <code>config.yml</code>和 <code>config.butterfly.yml</code>里的配置，如果存在同名配置，会使用 <code>config.butterfly.yml</code>的配置，其优先度较高。</p>
<p><img src="https://file.crazywong.com/gh/jerryc127/CDN/img/butterfly-docs-install-suggestion-1.png" alt="image-20200805191531090"></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
